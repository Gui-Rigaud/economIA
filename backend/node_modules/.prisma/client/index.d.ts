
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model FinProfile
 * 
 */
export type FinProfile = $Result.DefaultSelection<Prisma.$FinProfilePayload>
/**
 * Model FinTransactions
 * 
 */
export type FinTransactions = $Result.DefaultSelection<Prisma.$FinTransactionsPayload>
/**
 * Model ConfigUser
 * 
 */
export type ConfigUser = $Result.DefaultSelection<Prisma.$ConfigUserPayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const FrequenciaRelatorios: {
  DIARIA: 'DIARIA',
  SEMANAL: 'SEMANAL',
  MENSAL: 'MENSAL'
};

export type FrequenciaRelatorios = (typeof FrequenciaRelatorios)[keyof typeof FrequenciaRelatorios]


export const TemaApp: {
  CLARO: 'CLARO',
  ESCURO: 'ESCURO'
};

export type TemaApp = (typeof TemaApp)[keyof typeof TemaApp]

}

export type FrequenciaRelatorios = $Enums.FrequenciaRelatorios

export const FrequenciaRelatorios: typeof $Enums.FrequenciaRelatorios

export type TemaApp = $Enums.TemaApp

export const TemaApp: typeof $Enums.TemaApp

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more FinProfiles
 * const finProfiles = await prisma.finProfile.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more FinProfiles
   * const finProfiles = await prisma.finProfile.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.finProfile`: Exposes CRUD operations for the **FinProfile** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FinProfiles
    * const finProfiles = await prisma.finProfile.findMany()
    * ```
    */
  get finProfile(): Prisma.FinProfileDelegate<ExtArgs>;

  /**
   * `prisma.finTransactions`: Exposes CRUD operations for the **FinTransactions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FinTransactions
    * const finTransactions = await prisma.finTransactions.findMany()
    * ```
    */
  get finTransactions(): Prisma.FinTransactionsDelegate<ExtArgs>;

  /**
   * `prisma.configUser`: Exposes CRUD operations for the **ConfigUser** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ConfigUsers
    * const configUsers = await prisma.configUser.findMany()
    * ```
    */
  get configUser(): Prisma.ConfigUserDelegate<ExtArgs>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.0.1
   * Query Engine version: 5dbef10bdbfb579e07d35cc85fb1518d357cb99e
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    FinProfile: 'FinProfile',
    FinTransactions: 'FinTransactions',
    ConfigUser: 'ConfigUser',
    User: 'User'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "finProfile" | "finTransactions" | "configUser" | "user"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      FinProfile: {
        payload: Prisma.$FinProfilePayload<ExtArgs>
        fields: Prisma.FinProfileFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FinProfileFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinProfilePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FinProfileFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinProfilePayload>
          }
          findFirst: {
            args: Prisma.FinProfileFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinProfilePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FinProfileFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinProfilePayload>
          }
          findMany: {
            args: Prisma.FinProfileFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinProfilePayload>[]
          }
          create: {
            args: Prisma.FinProfileCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinProfilePayload>
          }
          createMany: {
            args: Prisma.FinProfileCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.FinProfileDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinProfilePayload>
          }
          update: {
            args: Prisma.FinProfileUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinProfilePayload>
          }
          deleteMany: {
            args: Prisma.FinProfileDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FinProfileUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.FinProfileUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinProfilePayload>
          }
          aggregate: {
            args: Prisma.FinProfileAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFinProfile>
          }
          groupBy: {
            args: Prisma.FinProfileGroupByArgs<ExtArgs>
            result: $Utils.Optional<FinProfileGroupByOutputType>[]
          }
          count: {
            args: Prisma.FinProfileCountArgs<ExtArgs>
            result: $Utils.Optional<FinProfileCountAggregateOutputType> | number
          }
        }
      }
      FinTransactions: {
        payload: Prisma.$FinTransactionsPayload<ExtArgs>
        fields: Prisma.FinTransactionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FinTransactionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinTransactionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FinTransactionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinTransactionsPayload>
          }
          findFirst: {
            args: Prisma.FinTransactionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinTransactionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FinTransactionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinTransactionsPayload>
          }
          findMany: {
            args: Prisma.FinTransactionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinTransactionsPayload>[]
          }
          create: {
            args: Prisma.FinTransactionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinTransactionsPayload>
          }
          createMany: {
            args: Prisma.FinTransactionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.FinTransactionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinTransactionsPayload>
          }
          update: {
            args: Prisma.FinTransactionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinTransactionsPayload>
          }
          deleteMany: {
            args: Prisma.FinTransactionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FinTransactionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.FinTransactionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinTransactionsPayload>
          }
          aggregate: {
            args: Prisma.FinTransactionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFinTransactions>
          }
          groupBy: {
            args: Prisma.FinTransactionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<FinTransactionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.FinTransactionsCountArgs<ExtArgs>
            result: $Utils.Optional<FinTransactionsCountAggregateOutputType> | number
          }
        }
      }
      ConfigUser: {
        payload: Prisma.$ConfigUserPayload<ExtArgs>
        fields: Prisma.ConfigUserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ConfigUserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfigUserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ConfigUserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfigUserPayload>
          }
          findFirst: {
            args: Prisma.ConfigUserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfigUserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ConfigUserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfigUserPayload>
          }
          findMany: {
            args: Prisma.ConfigUserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfigUserPayload>[]
          }
          create: {
            args: Prisma.ConfigUserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfigUserPayload>
          }
          createMany: {
            args: Prisma.ConfigUserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ConfigUserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfigUserPayload>
          }
          update: {
            args: Prisma.ConfigUserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfigUserPayload>
          }
          deleteMany: {
            args: Prisma.ConfigUserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ConfigUserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ConfigUserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfigUserPayload>
          }
          aggregate: {
            args: Prisma.ConfigUserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateConfigUser>
          }
          groupBy: {
            args: Prisma.ConfigUserGroupByArgs<ExtArgs>
            result: $Utils.Optional<ConfigUserGroupByOutputType>[]
          }
          count: {
            args: Prisma.ConfigUserCountArgs<ExtArgs>
            result: $Utils.Optional<ConfigUserCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    finProfiles: number
    finTransactions: number
    configUsers: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    finProfiles?: boolean | UserCountOutputTypeCountFinProfilesArgs
    finTransactions?: boolean | UserCountOutputTypeCountFinTransactionsArgs
    configUsers?: boolean | UserCountOutputTypeCountConfigUsersArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFinProfilesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FinProfileWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFinTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FinTransactionsWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountConfigUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConfigUserWhereInput
  }


  /**
   * Models
   */

  /**
   * Model FinProfile
   */

  export type AggregateFinProfile = {
    _count: FinProfileCountAggregateOutputType | null
    _avg: FinProfileAvgAggregateOutputType | null
    _sum: FinProfileSumAggregateOutputType | null
    _min: FinProfileMinAggregateOutputType | null
    _max: FinProfileMaxAggregateOutputType | null
  }

  export type FinProfileAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    renda_mensal: Decimal | null
    despesas_fixas: Decimal | null
    despesas_variaveis: Decimal | null
    patrimonio_atual: Decimal | null
  }

  export type FinProfileSumAggregateOutputType = {
    id: number | null
    user_id: number | null
    renda_mensal: Decimal | null
    despesas_fixas: Decimal | null
    despesas_variaveis: Decimal | null
    patrimonio_atual: Decimal | null
  }

  export type FinProfileMinAggregateOutputType = {
    id: number | null
    user_id: number | null
    renda_mensal: Decimal | null
    despesas_fixas: Decimal | null
    despesas_variaveis: Decimal | null
    objetivo_financeiro: string | null
    perfil_risco: string | null
    patrimonio_atual: Decimal | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type FinProfileMaxAggregateOutputType = {
    id: number | null
    user_id: number | null
    renda_mensal: Decimal | null
    despesas_fixas: Decimal | null
    despesas_variaveis: Decimal | null
    objetivo_financeiro: string | null
    perfil_risco: string | null
    patrimonio_atual: Decimal | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type FinProfileCountAggregateOutputType = {
    id: number
    user_id: number
    renda_mensal: number
    despesas_fixas: number
    despesas_variaveis: number
    objetivo_financeiro: number
    perfil_risco: number
    patrimonio_atual: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type FinProfileAvgAggregateInputType = {
    id?: true
    user_id?: true
    renda_mensal?: true
    despesas_fixas?: true
    despesas_variaveis?: true
    patrimonio_atual?: true
  }

  export type FinProfileSumAggregateInputType = {
    id?: true
    user_id?: true
    renda_mensal?: true
    despesas_fixas?: true
    despesas_variaveis?: true
    patrimonio_atual?: true
  }

  export type FinProfileMinAggregateInputType = {
    id?: true
    user_id?: true
    renda_mensal?: true
    despesas_fixas?: true
    despesas_variaveis?: true
    objetivo_financeiro?: true
    perfil_risco?: true
    patrimonio_atual?: true
    created_at?: true
    updated_at?: true
  }

  export type FinProfileMaxAggregateInputType = {
    id?: true
    user_id?: true
    renda_mensal?: true
    despesas_fixas?: true
    despesas_variaveis?: true
    objetivo_financeiro?: true
    perfil_risco?: true
    patrimonio_atual?: true
    created_at?: true
    updated_at?: true
  }

  export type FinProfileCountAggregateInputType = {
    id?: true
    user_id?: true
    renda_mensal?: true
    despesas_fixas?: true
    despesas_variaveis?: true
    objetivo_financeiro?: true
    perfil_risco?: true
    patrimonio_atual?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type FinProfileAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FinProfile to aggregate.
     */
    where?: FinProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FinProfiles to fetch.
     */
    orderBy?: FinProfileOrderByWithRelationInput | FinProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FinProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FinProfiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FinProfiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FinProfiles
    **/
    _count?: true | FinProfileCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FinProfileAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FinProfileSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FinProfileMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FinProfileMaxAggregateInputType
  }

  export type GetFinProfileAggregateType<T extends FinProfileAggregateArgs> = {
        [P in keyof T & keyof AggregateFinProfile]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFinProfile[P]>
      : GetScalarType<T[P], AggregateFinProfile[P]>
  }




  export type FinProfileGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FinProfileWhereInput
    orderBy?: FinProfileOrderByWithAggregationInput | FinProfileOrderByWithAggregationInput[]
    by: FinProfileScalarFieldEnum[] | FinProfileScalarFieldEnum
    having?: FinProfileScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FinProfileCountAggregateInputType | true
    _avg?: FinProfileAvgAggregateInputType
    _sum?: FinProfileSumAggregateInputType
    _min?: FinProfileMinAggregateInputType
    _max?: FinProfileMaxAggregateInputType
  }

  export type FinProfileGroupByOutputType = {
    id: number
    user_id: number
    renda_mensal: Decimal | null
    despesas_fixas: Decimal | null
    despesas_variaveis: Decimal | null
    objetivo_financeiro: string | null
    perfil_risco: string | null
    patrimonio_atual: Decimal | null
    created_at: Date
    updated_at: Date
    _count: FinProfileCountAggregateOutputType | null
    _avg: FinProfileAvgAggregateOutputType | null
    _sum: FinProfileSumAggregateOutputType | null
    _min: FinProfileMinAggregateOutputType | null
    _max: FinProfileMaxAggregateOutputType | null
  }

  type GetFinProfileGroupByPayload<T extends FinProfileGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FinProfileGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FinProfileGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FinProfileGroupByOutputType[P]>
            : GetScalarType<T[P], FinProfileGroupByOutputType[P]>
        }
      >
    >


  export type FinProfileSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    renda_mensal?: boolean
    despesas_fixas?: boolean
    despesas_variaveis?: boolean
    objetivo_financeiro?: boolean
    perfil_risco?: boolean
    patrimonio_atual?: boolean
    created_at?: boolean
    updated_at?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["finProfile"]>


  export type FinProfileSelectScalar = {
    id?: boolean
    user_id?: boolean
    renda_mensal?: boolean
    despesas_fixas?: boolean
    despesas_variaveis?: boolean
    objetivo_financeiro?: boolean
    perfil_risco?: boolean
    patrimonio_atual?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type FinProfileInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $FinProfilePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FinProfile"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      user_id: number
      renda_mensal: Prisma.Decimal | null
      despesas_fixas: Prisma.Decimal | null
      despesas_variaveis: Prisma.Decimal | null
      objetivo_financeiro: string | null
      perfil_risco: string | null
      patrimonio_atual: Prisma.Decimal | null
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["finProfile"]>
    composites: {}
  }

  type FinProfileGetPayload<S extends boolean | null | undefined | FinProfileDefaultArgs> = $Result.GetResult<Prisma.$FinProfilePayload, S>

  type FinProfileCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<FinProfileFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: FinProfileCountAggregateInputType | true
    }

  export interface FinProfileDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FinProfile'], meta: { name: 'FinProfile' } }
    /**
     * Find zero or one FinProfile that matches the filter.
     * @param {FinProfileFindUniqueArgs} args - Arguments to find a FinProfile
     * @example
     * // Get one FinProfile
     * const finProfile = await prisma.finProfile.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FinProfileFindUniqueArgs>(args: SelectSubset<T, FinProfileFindUniqueArgs<ExtArgs>>): Prisma__FinProfileClient<$Result.GetResult<Prisma.$FinProfilePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one FinProfile that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {FinProfileFindUniqueOrThrowArgs} args - Arguments to find a FinProfile
     * @example
     * // Get one FinProfile
     * const finProfile = await prisma.finProfile.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FinProfileFindUniqueOrThrowArgs>(args: SelectSubset<T, FinProfileFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FinProfileClient<$Result.GetResult<Prisma.$FinProfilePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first FinProfile that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinProfileFindFirstArgs} args - Arguments to find a FinProfile
     * @example
     * // Get one FinProfile
     * const finProfile = await prisma.finProfile.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FinProfileFindFirstArgs>(args?: SelectSubset<T, FinProfileFindFirstArgs<ExtArgs>>): Prisma__FinProfileClient<$Result.GetResult<Prisma.$FinProfilePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first FinProfile that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinProfileFindFirstOrThrowArgs} args - Arguments to find a FinProfile
     * @example
     * // Get one FinProfile
     * const finProfile = await prisma.finProfile.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FinProfileFindFirstOrThrowArgs>(args?: SelectSubset<T, FinProfileFindFirstOrThrowArgs<ExtArgs>>): Prisma__FinProfileClient<$Result.GetResult<Prisma.$FinProfilePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more FinProfiles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinProfileFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FinProfiles
     * const finProfiles = await prisma.finProfile.findMany()
     * 
     * // Get first 10 FinProfiles
     * const finProfiles = await prisma.finProfile.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const finProfileWithIdOnly = await prisma.finProfile.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FinProfileFindManyArgs>(args?: SelectSubset<T, FinProfileFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FinProfilePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a FinProfile.
     * @param {FinProfileCreateArgs} args - Arguments to create a FinProfile.
     * @example
     * // Create one FinProfile
     * const FinProfile = await prisma.finProfile.create({
     *   data: {
     *     // ... data to create a FinProfile
     *   }
     * })
     * 
     */
    create<T extends FinProfileCreateArgs>(args: SelectSubset<T, FinProfileCreateArgs<ExtArgs>>): Prisma__FinProfileClient<$Result.GetResult<Prisma.$FinProfilePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many FinProfiles.
     * @param {FinProfileCreateManyArgs} args - Arguments to create many FinProfiles.
     * @example
     * // Create many FinProfiles
     * const finProfile = await prisma.finProfile.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FinProfileCreateManyArgs>(args?: SelectSubset<T, FinProfileCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a FinProfile.
     * @param {FinProfileDeleteArgs} args - Arguments to delete one FinProfile.
     * @example
     * // Delete one FinProfile
     * const FinProfile = await prisma.finProfile.delete({
     *   where: {
     *     // ... filter to delete one FinProfile
     *   }
     * })
     * 
     */
    delete<T extends FinProfileDeleteArgs>(args: SelectSubset<T, FinProfileDeleteArgs<ExtArgs>>): Prisma__FinProfileClient<$Result.GetResult<Prisma.$FinProfilePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one FinProfile.
     * @param {FinProfileUpdateArgs} args - Arguments to update one FinProfile.
     * @example
     * // Update one FinProfile
     * const finProfile = await prisma.finProfile.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FinProfileUpdateArgs>(args: SelectSubset<T, FinProfileUpdateArgs<ExtArgs>>): Prisma__FinProfileClient<$Result.GetResult<Prisma.$FinProfilePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more FinProfiles.
     * @param {FinProfileDeleteManyArgs} args - Arguments to filter FinProfiles to delete.
     * @example
     * // Delete a few FinProfiles
     * const { count } = await prisma.finProfile.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FinProfileDeleteManyArgs>(args?: SelectSubset<T, FinProfileDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FinProfiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinProfileUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FinProfiles
     * const finProfile = await prisma.finProfile.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FinProfileUpdateManyArgs>(args: SelectSubset<T, FinProfileUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one FinProfile.
     * @param {FinProfileUpsertArgs} args - Arguments to update or create a FinProfile.
     * @example
     * // Update or create a FinProfile
     * const finProfile = await prisma.finProfile.upsert({
     *   create: {
     *     // ... data to create a FinProfile
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FinProfile we want to update
     *   }
     * })
     */
    upsert<T extends FinProfileUpsertArgs>(args: SelectSubset<T, FinProfileUpsertArgs<ExtArgs>>): Prisma__FinProfileClient<$Result.GetResult<Prisma.$FinProfilePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of FinProfiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinProfileCountArgs} args - Arguments to filter FinProfiles to count.
     * @example
     * // Count the number of FinProfiles
     * const count = await prisma.finProfile.count({
     *   where: {
     *     // ... the filter for the FinProfiles we want to count
     *   }
     * })
    **/
    count<T extends FinProfileCountArgs>(
      args?: Subset<T, FinProfileCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FinProfileCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FinProfile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinProfileAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FinProfileAggregateArgs>(args: Subset<T, FinProfileAggregateArgs>): Prisma.PrismaPromise<GetFinProfileAggregateType<T>>

    /**
     * Group by FinProfile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinProfileGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FinProfileGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FinProfileGroupByArgs['orderBy'] }
        : { orderBy?: FinProfileGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FinProfileGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFinProfileGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FinProfile model
   */
  readonly fields: FinProfileFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FinProfile.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FinProfileClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FinProfile model
   */ 
  interface FinProfileFieldRefs {
    readonly id: FieldRef<"FinProfile", 'Int'>
    readonly user_id: FieldRef<"FinProfile", 'Int'>
    readonly renda_mensal: FieldRef<"FinProfile", 'Decimal'>
    readonly despesas_fixas: FieldRef<"FinProfile", 'Decimal'>
    readonly despesas_variaveis: FieldRef<"FinProfile", 'Decimal'>
    readonly objetivo_financeiro: FieldRef<"FinProfile", 'String'>
    readonly perfil_risco: FieldRef<"FinProfile", 'String'>
    readonly patrimonio_atual: FieldRef<"FinProfile", 'Decimal'>
    readonly created_at: FieldRef<"FinProfile", 'DateTime'>
    readonly updated_at: FieldRef<"FinProfile", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * FinProfile findUnique
   */
  export type FinProfileFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinProfile
     */
    select?: FinProfileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinProfileInclude<ExtArgs> | null
    /**
     * Filter, which FinProfile to fetch.
     */
    where: FinProfileWhereUniqueInput
  }

  /**
   * FinProfile findUniqueOrThrow
   */
  export type FinProfileFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinProfile
     */
    select?: FinProfileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinProfileInclude<ExtArgs> | null
    /**
     * Filter, which FinProfile to fetch.
     */
    where: FinProfileWhereUniqueInput
  }

  /**
   * FinProfile findFirst
   */
  export type FinProfileFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinProfile
     */
    select?: FinProfileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinProfileInclude<ExtArgs> | null
    /**
     * Filter, which FinProfile to fetch.
     */
    where?: FinProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FinProfiles to fetch.
     */
    orderBy?: FinProfileOrderByWithRelationInput | FinProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FinProfiles.
     */
    cursor?: FinProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FinProfiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FinProfiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FinProfiles.
     */
    distinct?: FinProfileScalarFieldEnum | FinProfileScalarFieldEnum[]
  }

  /**
   * FinProfile findFirstOrThrow
   */
  export type FinProfileFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinProfile
     */
    select?: FinProfileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinProfileInclude<ExtArgs> | null
    /**
     * Filter, which FinProfile to fetch.
     */
    where?: FinProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FinProfiles to fetch.
     */
    orderBy?: FinProfileOrderByWithRelationInput | FinProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FinProfiles.
     */
    cursor?: FinProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FinProfiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FinProfiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FinProfiles.
     */
    distinct?: FinProfileScalarFieldEnum | FinProfileScalarFieldEnum[]
  }

  /**
   * FinProfile findMany
   */
  export type FinProfileFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinProfile
     */
    select?: FinProfileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinProfileInclude<ExtArgs> | null
    /**
     * Filter, which FinProfiles to fetch.
     */
    where?: FinProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FinProfiles to fetch.
     */
    orderBy?: FinProfileOrderByWithRelationInput | FinProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FinProfiles.
     */
    cursor?: FinProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FinProfiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FinProfiles.
     */
    skip?: number
    distinct?: FinProfileScalarFieldEnum | FinProfileScalarFieldEnum[]
  }

  /**
   * FinProfile create
   */
  export type FinProfileCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinProfile
     */
    select?: FinProfileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinProfileInclude<ExtArgs> | null
    /**
     * The data needed to create a FinProfile.
     */
    data: XOR<FinProfileCreateInput, FinProfileUncheckedCreateInput>
  }

  /**
   * FinProfile createMany
   */
  export type FinProfileCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FinProfiles.
     */
    data: FinProfileCreateManyInput | FinProfileCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FinProfile update
   */
  export type FinProfileUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinProfile
     */
    select?: FinProfileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinProfileInclude<ExtArgs> | null
    /**
     * The data needed to update a FinProfile.
     */
    data: XOR<FinProfileUpdateInput, FinProfileUncheckedUpdateInput>
    /**
     * Choose, which FinProfile to update.
     */
    where: FinProfileWhereUniqueInput
  }

  /**
   * FinProfile updateMany
   */
  export type FinProfileUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FinProfiles.
     */
    data: XOR<FinProfileUpdateManyMutationInput, FinProfileUncheckedUpdateManyInput>
    /**
     * Filter which FinProfiles to update
     */
    where?: FinProfileWhereInput
  }

  /**
   * FinProfile upsert
   */
  export type FinProfileUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinProfile
     */
    select?: FinProfileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinProfileInclude<ExtArgs> | null
    /**
     * The filter to search for the FinProfile to update in case it exists.
     */
    where: FinProfileWhereUniqueInput
    /**
     * In case the FinProfile found by the `where` argument doesn't exist, create a new FinProfile with this data.
     */
    create: XOR<FinProfileCreateInput, FinProfileUncheckedCreateInput>
    /**
     * In case the FinProfile was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FinProfileUpdateInput, FinProfileUncheckedUpdateInput>
  }

  /**
   * FinProfile delete
   */
  export type FinProfileDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinProfile
     */
    select?: FinProfileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinProfileInclude<ExtArgs> | null
    /**
     * Filter which FinProfile to delete.
     */
    where: FinProfileWhereUniqueInput
  }

  /**
   * FinProfile deleteMany
   */
  export type FinProfileDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FinProfiles to delete
     */
    where?: FinProfileWhereInput
  }

  /**
   * FinProfile without action
   */
  export type FinProfileDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinProfile
     */
    select?: FinProfileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinProfileInclude<ExtArgs> | null
  }


  /**
   * Model FinTransactions
   */

  export type AggregateFinTransactions = {
    _count: FinTransactionsCountAggregateOutputType | null
    _avg: FinTransactionsAvgAggregateOutputType | null
    _sum: FinTransactionsSumAggregateOutputType | null
    _min: FinTransactionsMinAggregateOutputType | null
    _max: FinTransactionsMaxAggregateOutputType | null
  }

  export type FinTransactionsAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    valor: Decimal | null
  }

  export type FinTransactionsSumAggregateOutputType = {
    id: number | null
    user_id: number | null
    valor: Decimal | null
  }

  export type FinTransactionsMinAggregateOutputType = {
    id: number | null
    user_id: number | null
    data_transacao: Date | null
    categoria_transacao: string | null
    descricao: string | null
    valor: Decimal | null
    forma_pagamento: string | null
  }

  export type FinTransactionsMaxAggregateOutputType = {
    id: number | null
    user_id: number | null
    data_transacao: Date | null
    categoria_transacao: string | null
    descricao: string | null
    valor: Decimal | null
    forma_pagamento: string | null
  }

  export type FinTransactionsCountAggregateOutputType = {
    id: number
    user_id: number
    data_transacao: number
    categoria_transacao: number
    descricao: number
    valor: number
    forma_pagamento: number
    _all: number
  }


  export type FinTransactionsAvgAggregateInputType = {
    id?: true
    user_id?: true
    valor?: true
  }

  export type FinTransactionsSumAggregateInputType = {
    id?: true
    user_id?: true
    valor?: true
  }

  export type FinTransactionsMinAggregateInputType = {
    id?: true
    user_id?: true
    data_transacao?: true
    categoria_transacao?: true
    descricao?: true
    valor?: true
    forma_pagamento?: true
  }

  export type FinTransactionsMaxAggregateInputType = {
    id?: true
    user_id?: true
    data_transacao?: true
    categoria_transacao?: true
    descricao?: true
    valor?: true
    forma_pagamento?: true
  }

  export type FinTransactionsCountAggregateInputType = {
    id?: true
    user_id?: true
    data_transacao?: true
    categoria_transacao?: true
    descricao?: true
    valor?: true
    forma_pagamento?: true
    _all?: true
  }

  export type FinTransactionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FinTransactions to aggregate.
     */
    where?: FinTransactionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FinTransactions to fetch.
     */
    orderBy?: FinTransactionsOrderByWithRelationInput | FinTransactionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FinTransactionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FinTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FinTransactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FinTransactions
    **/
    _count?: true | FinTransactionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FinTransactionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FinTransactionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FinTransactionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FinTransactionsMaxAggregateInputType
  }

  export type GetFinTransactionsAggregateType<T extends FinTransactionsAggregateArgs> = {
        [P in keyof T & keyof AggregateFinTransactions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFinTransactions[P]>
      : GetScalarType<T[P], AggregateFinTransactions[P]>
  }




  export type FinTransactionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FinTransactionsWhereInput
    orderBy?: FinTransactionsOrderByWithAggregationInput | FinTransactionsOrderByWithAggregationInput[]
    by: FinTransactionsScalarFieldEnum[] | FinTransactionsScalarFieldEnum
    having?: FinTransactionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FinTransactionsCountAggregateInputType | true
    _avg?: FinTransactionsAvgAggregateInputType
    _sum?: FinTransactionsSumAggregateInputType
    _min?: FinTransactionsMinAggregateInputType
    _max?: FinTransactionsMaxAggregateInputType
  }

  export type FinTransactionsGroupByOutputType = {
    id: number
    user_id: number
    data_transacao: Date
    categoria_transacao: string | null
    descricao: string | null
    valor: Decimal
    forma_pagamento: string | null
    _count: FinTransactionsCountAggregateOutputType | null
    _avg: FinTransactionsAvgAggregateOutputType | null
    _sum: FinTransactionsSumAggregateOutputType | null
    _min: FinTransactionsMinAggregateOutputType | null
    _max: FinTransactionsMaxAggregateOutputType | null
  }

  type GetFinTransactionsGroupByPayload<T extends FinTransactionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FinTransactionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FinTransactionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FinTransactionsGroupByOutputType[P]>
            : GetScalarType<T[P], FinTransactionsGroupByOutputType[P]>
        }
      >
    >


  export type FinTransactionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    data_transacao?: boolean
    categoria_transacao?: boolean
    descricao?: boolean
    valor?: boolean
    forma_pagamento?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["finTransactions"]>


  export type FinTransactionsSelectScalar = {
    id?: boolean
    user_id?: boolean
    data_transacao?: boolean
    categoria_transacao?: boolean
    descricao?: boolean
    valor?: boolean
    forma_pagamento?: boolean
  }

  export type FinTransactionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $FinTransactionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FinTransactions"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      user_id: number
      data_transacao: Date
      categoria_transacao: string | null
      descricao: string | null
      valor: Prisma.Decimal
      forma_pagamento: string | null
    }, ExtArgs["result"]["finTransactions"]>
    composites: {}
  }

  type FinTransactionsGetPayload<S extends boolean | null | undefined | FinTransactionsDefaultArgs> = $Result.GetResult<Prisma.$FinTransactionsPayload, S>

  type FinTransactionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<FinTransactionsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: FinTransactionsCountAggregateInputType | true
    }

  export interface FinTransactionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FinTransactions'], meta: { name: 'FinTransactions' } }
    /**
     * Find zero or one FinTransactions that matches the filter.
     * @param {FinTransactionsFindUniqueArgs} args - Arguments to find a FinTransactions
     * @example
     * // Get one FinTransactions
     * const finTransactions = await prisma.finTransactions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FinTransactionsFindUniqueArgs>(args: SelectSubset<T, FinTransactionsFindUniqueArgs<ExtArgs>>): Prisma__FinTransactionsClient<$Result.GetResult<Prisma.$FinTransactionsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one FinTransactions that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {FinTransactionsFindUniqueOrThrowArgs} args - Arguments to find a FinTransactions
     * @example
     * // Get one FinTransactions
     * const finTransactions = await prisma.finTransactions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FinTransactionsFindUniqueOrThrowArgs>(args: SelectSubset<T, FinTransactionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FinTransactionsClient<$Result.GetResult<Prisma.$FinTransactionsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first FinTransactions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinTransactionsFindFirstArgs} args - Arguments to find a FinTransactions
     * @example
     * // Get one FinTransactions
     * const finTransactions = await prisma.finTransactions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FinTransactionsFindFirstArgs>(args?: SelectSubset<T, FinTransactionsFindFirstArgs<ExtArgs>>): Prisma__FinTransactionsClient<$Result.GetResult<Prisma.$FinTransactionsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first FinTransactions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinTransactionsFindFirstOrThrowArgs} args - Arguments to find a FinTransactions
     * @example
     * // Get one FinTransactions
     * const finTransactions = await prisma.finTransactions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FinTransactionsFindFirstOrThrowArgs>(args?: SelectSubset<T, FinTransactionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__FinTransactionsClient<$Result.GetResult<Prisma.$FinTransactionsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more FinTransactions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinTransactionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FinTransactions
     * const finTransactions = await prisma.finTransactions.findMany()
     * 
     * // Get first 10 FinTransactions
     * const finTransactions = await prisma.finTransactions.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const finTransactionsWithIdOnly = await prisma.finTransactions.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FinTransactionsFindManyArgs>(args?: SelectSubset<T, FinTransactionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FinTransactionsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a FinTransactions.
     * @param {FinTransactionsCreateArgs} args - Arguments to create a FinTransactions.
     * @example
     * // Create one FinTransactions
     * const FinTransactions = await prisma.finTransactions.create({
     *   data: {
     *     // ... data to create a FinTransactions
     *   }
     * })
     * 
     */
    create<T extends FinTransactionsCreateArgs>(args: SelectSubset<T, FinTransactionsCreateArgs<ExtArgs>>): Prisma__FinTransactionsClient<$Result.GetResult<Prisma.$FinTransactionsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many FinTransactions.
     * @param {FinTransactionsCreateManyArgs} args - Arguments to create many FinTransactions.
     * @example
     * // Create many FinTransactions
     * const finTransactions = await prisma.finTransactions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FinTransactionsCreateManyArgs>(args?: SelectSubset<T, FinTransactionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a FinTransactions.
     * @param {FinTransactionsDeleteArgs} args - Arguments to delete one FinTransactions.
     * @example
     * // Delete one FinTransactions
     * const FinTransactions = await prisma.finTransactions.delete({
     *   where: {
     *     // ... filter to delete one FinTransactions
     *   }
     * })
     * 
     */
    delete<T extends FinTransactionsDeleteArgs>(args: SelectSubset<T, FinTransactionsDeleteArgs<ExtArgs>>): Prisma__FinTransactionsClient<$Result.GetResult<Prisma.$FinTransactionsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one FinTransactions.
     * @param {FinTransactionsUpdateArgs} args - Arguments to update one FinTransactions.
     * @example
     * // Update one FinTransactions
     * const finTransactions = await prisma.finTransactions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FinTransactionsUpdateArgs>(args: SelectSubset<T, FinTransactionsUpdateArgs<ExtArgs>>): Prisma__FinTransactionsClient<$Result.GetResult<Prisma.$FinTransactionsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more FinTransactions.
     * @param {FinTransactionsDeleteManyArgs} args - Arguments to filter FinTransactions to delete.
     * @example
     * // Delete a few FinTransactions
     * const { count } = await prisma.finTransactions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FinTransactionsDeleteManyArgs>(args?: SelectSubset<T, FinTransactionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FinTransactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinTransactionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FinTransactions
     * const finTransactions = await prisma.finTransactions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FinTransactionsUpdateManyArgs>(args: SelectSubset<T, FinTransactionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one FinTransactions.
     * @param {FinTransactionsUpsertArgs} args - Arguments to update or create a FinTransactions.
     * @example
     * // Update or create a FinTransactions
     * const finTransactions = await prisma.finTransactions.upsert({
     *   create: {
     *     // ... data to create a FinTransactions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FinTransactions we want to update
     *   }
     * })
     */
    upsert<T extends FinTransactionsUpsertArgs>(args: SelectSubset<T, FinTransactionsUpsertArgs<ExtArgs>>): Prisma__FinTransactionsClient<$Result.GetResult<Prisma.$FinTransactionsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of FinTransactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinTransactionsCountArgs} args - Arguments to filter FinTransactions to count.
     * @example
     * // Count the number of FinTransactions
     * const count = await prisma.finTransactions.count({
     *   where: {
     *     // ... the filter for the FinTransactions we want to count
     *   }
     * })
    **/
    count<T extends FinTransactionsCountArgs>(
      args?: Subset<T, FinTransactionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FinTransactionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FinTransactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinTransactionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FinTransactionsAggregateArgs>(args: Subset<T, FinTransactionsAggregateArgs>): Prisma.PrismaPromise<GetFinTransactionsAggregateType<T>>

    /**
     * Group by FinTransactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinTransactionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FinTransactionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FinTransactionsGroupByArgs['orderBy'] }
        : { orderBy?: FinTransactionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FinTransactionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFinTransactionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FinTransactions model
   */
  readonly fields: FinTransactionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FinTransactions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FinTransactionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FinTransactions model
   */ 
  interface FinTransactionsFieldRefs {
    readonly id: FieldRef<"FinTransactions", 'Int'>
    readonly user_id: FieldRef<"FinTransactions", 'Int'>
    readonly data_transacao: FieldRef<"FinTransactions", 'DateTime'>
    readonly categoria_transacao: FieldRef<"FinTransactions", 'String'>
    readonly descricao: FieldRef<"FinTransactions", 'String'>
    readonly valor: FieldRef<"FinTransactions", 'Decimal'>
    readonly forma_pagamento: FieldRef<"FinTransactions", 'String'>
  }
    

  // Custom InputTypes
  /**
   * FinTransactions findUnique
   */
  export type FinTransactionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinTransactions
     */
    select?: FinTransactionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinTransactionsInclude<ExtArgs> | null
    /**
     * Filter, which FinTransactions to fetch.
     */
    where: FinTransactionsWhereUniqueInput
  }

  /**
   * FinTransactions findUniqueOrThrow
   */
  export type FinTransactionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinTransactions
     */
    select?: FinTransactionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinTransactionsInclude<ExtArgs> | null
    /**
     * Filter, which FinTransactions to fetch.
     */
    where: FinTransactionsWhereUniqueInput
  }

  /**
   * FinTransactions findFirst
   */
  export type FinTransactionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinTransactions
     */
    select?: FinTransactionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinTransactionsInclude<ExtArgs> | null
    /**
     * Filter, which FinTransactions to fetch.
     */
    where?: FinTransactionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FinTransactions to fetch.
     */
    orderBy?: FinTransactionsOrderByWithRelationInput | FinTransactionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FinTransactions.
     */
    cursor?: FinTransactionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FinTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FinTransactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FinTransactions.
     */
    distinct?: FinTransactionsScalarFieldEnum | FinTransactionsScalarFieldEnum[]
  }

  /**
   * FinTransactions findFirstOrThrow
   */
  export type FinTransactionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinTransactions
     */
    select?: FinTransactionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinTransactionsInclude<ExtArgs> | null
    /**
     * Filter, which FinTransactions to fetch.
     */
    where?: FinTransactionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FinTransactions to fetch.
     */
    orderBy?: FinTransactionsOrderByWithRelationInput | FinTransactionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FinTransactions.
     */
    cursor?: FinTransactionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FinTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FinTransactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FinTransactions.
     */
    distinct?: FinTransactionsScalarFieldEnum | FinTransactionsScalarFieldEnum[]
  }

  /**
   * FinTransactions findMany
   */
  export type FinTransactionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinTransactions
     */
    select?: FinTransactionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinTransactionsInclude<ExtArgs> | null
    /**
     * Filter, which FinTransactions to fetch.
     */
    where?: FinTransactionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FinTransactions to fetch.
     */
    orderBy?: FinTransactionsOrderByWithRelationInput | FinTransactionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FinTransactions.
     */
    cursor?: FinTransactionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FinTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FinTransactions.
     */
    skip?: number
    distinct?: FinTransactionsScalarFieldEnum | FinTransactionsScalarFieldEnum[]
  }

  /**
   * FinTransactions create
   */
  export type FinTransactionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinTransactions
     */
    select?: FinTransactionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinTransactionsInclude<ExtArgs> | null
    /**
     * The data needed to create a FinTransactions.
     */
    data: XOR<FinTransactionsCreateInput, FinTransactionsUncheckedCreateInput>
  }

  /**
   * FinTransactions createMany
   */
  export type FinTransactionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FinTransactions.
     */
    data: FinTransactionsCreateManyInput | FinTransactionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FinTransactions update
   */
  export type FinTransactionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinTransactions
     */
    select?: FinTransactionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinTransactionsInclude<ExtArgs> | null
    /**
     * The data needed to update a FinTransactions.
     */
    data: XOR<FinTransactionsUpdateInput, FinTransactionsUncheckedUpdateInput>
    /**
     * Choose, which FinTransactions to update.
     */
    where: FinTransactionsWhereUniqueInput
  }

  /**
   * FinTransactions updateMany
   */
  export type FinTransactionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FinTransactions.
     */
    data: XOR<FinTransactionsUpdateManyMutationInput, FinTransactionsUncheckedUpdateManyInput>
    /**
     * Filter which FinTransactions to update
     */
    where?: FinTransactionsWhereInput
  }

  /**
   * FinTransactions upsert
   */
  export type FinTransactionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinTransactions
     */
    select?: FinTransactionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinTransactionsInclude<ExtArgs> | null
    /**
     * The filter to search for the FinTransactions to update in case it exists.
     */
    where: FinTransactionsWhereUniqueInput
    /**
     * In case the FinTransactions found by the `where` argument doesn't exist, create a new FinTransactions with this data.
     */
    create: XOR<FinTransactionsCreateInput, FinTransactionsUncheckedCreateInput>
    /**
     * In case the FinTransactions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FinTransactionsUpdateInput, FinTransactionsUncheckedUpdateInput>
  }

  /**
   * FinTransactions delete
   */
  export type FinTransactionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinTransactions
     */
    select?: FinTransactionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinTransactionsInclude<ExtArgs> | null
    /**
     * Filter which FinTransactions to delete.
     */
    where: FinTransactionsWhereUniqueInput
  }

  /**
   * FinTransactions deleteMany
   */
  export type FinTransactionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FinTransactions to delete
     */
    where?: FinTransactionsWhereInput
  }

  /**
   * FinTransactions without action
   */
  export type FinTransactionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinTransactions
     */
    select?: FinTransactionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinTransactionsInclude<ExtArgs> | null
  }


  /**
   * Model ConfigUser
   */

  export type AggregateConfigUser = {
    _count: ConfigUserCountAggregateOutputType | null
    _avg: ConfigUserAvgAggregateOutputType | null
    _sum: ConfigUserSumAggregateOutputType | null
    _min: ConfigUserMinAggregateOutputType | null
    _max: ConfigUserMaxAggregateOutputType | null
  }

  export type ConfigUserAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
  }

  export type ConfigUserSumAggregateOutputType = {
    id: number | null
    user_id: number | null
  }

  export type ConfigUserMinAggregateOutputType = {
    id: number | null
    user_id: number | null
    notificacoes_ativas: boolean | null
    frequencia_relatorios: $Enums.FrequenciaRelatorios | null
    moeda_preferencial: string | null
    idioma: string | null
    tema_app: $Enums.TemaApp | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type ConfigUserMaxAggregateOutputType = {
    id: number | null
    user_id: number | null
    notificacoes_ativas: boolean | null
    frequencia_relatorios: $Enums.FrequenciaRelatorios | null
    moeda_preferencial: string | null
    idioma: string | null
    tema_app: $Enums.TemaApp | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type ConfigUserCountAggregateOutputType = {
    id: number
    user_id: number
    notificacoes_ativas: number
    frequencia_relatorios: number
    moeda_preferencial: number
    idioma: number
    tema_app: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type ConfigUserAvgAggregateInputType = {
    id?: true
    user_id?: true
  }

  export type ConfigUserSumAggregateInputType = {
    id?: true
    user_id?: true
  }

  export type ConfigUserMinAggregateInputType = {
    id?: true
    user_id?: true
    notificacoes_ativas?: true
    frequencia_relatorios?: true
    moeda_preferencial?: true
    idioma?: true
    tema_app?: true
    created_at?: true
    updated_at?: true
  }

  export type ConfigUserMaxAggregateInputType = {
    id?: true
    user_id?: true
    notificacoes_ativas?: true
    frequencia_relatorios?: true
    moeda_preferencial?: true
    idioma?: true
    tema_app?: true
    created_at?: true
    updated_at?: true
  }

  export type ConfigUserCountAggregateInputType = {
    id?: true
    user_id?: true
    notificacoes_ativas?: true
    frequencia_relatorios?: true
    moeda_preferencial?: true
    idioma?: true
    tema_app?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type ConfigUserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ConfigUser to aggregate.
     */
    where?: ConfigUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConfigUsers to fetch.
     */
    orderBy?: ConfigUserOrderByWithRelationInput | ConfigUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ConfigUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConfigUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConfigUsers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ConfigUsers
    **/
    _count?: true | ConfigUserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ConfigUserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ConfigUserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ConfigUserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ConfigUserMaxAggregateInputType
  }

  export type GetConfigUserAggregateType<T extends ConfigUserAggregateArgs> = {
        [P in keyof T & keyof AggregateConfigUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateConfigUser[P]>
      : GetScalarType<T[P], AggregateConfigUser[P]>
  }




  export type ConfigUserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConfigUserWhereInput
    orderBy?: ConfigUserOrderByWithAggregationInput | ConfigUserOrderByWithAggregationInput[]
    by: ConfigUserScalarFieldEnum[] | ConfigUserScalarFieldEnum
    having?: ConfigUserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ConfigUserCountAggregateInputType | true
    _avg?: ConfigUserAvgAggregateInputType
    _sum?: ConfigUserSumAggregateInputType
    _min?: ConfigUserMinAggregateInputType
    _max?: ConfigUserMaxAggregateInputType
  }

  export type ConfigUserGroupByOutputType = {
    id: number
    user_id: number
    notificacoes_ativas: boolean
    frequencia_relatorios: $Enums.FrequenciaRelatorios
    moeda_preferencial: string
    idioma: string
    tema_app: $Enums.TemaApp
    created_at: Date
    updated_at: Date
    _count: ConfigUserCountAggregateOutputType | null
    _avg: ConfigUserAvgAggregateOutputType | null
    _sum: ConfigUserSumAggregateOutputType | null
    _min: ConfigUserMinAggregateOutputType | null
    _max: ConfigUserMaxAggregateOutputType | null
  }

  type GetConfigUserGroupByPayload<T extends ConfigUserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ConfigUserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ConfigUserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ConfigUserGroupByOutputType[P]>
            : GetScalarType<T[P], ConfigUserGroupByOutputType[P]>
        }
      >
    >


  export type ConfigUserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    notificacoes_ativas?: boolean
    frequencia_relatorios?: boolean
    moeda_preferencial?: boolean
    idioma?: boolean
    tema_app?: boolean
    created_at?: boolean
    updated_at?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["configUser"]>


  export type ConfigUserSelectScalar = {
    id?: boolean
    user_id?: boolean
    notificacoes_ativas?: boolean
    frequencia_relatorios?: boolean
    moeda_preferencial?: boolean
    idioma?: boolean
    tema_app?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type ConfigUserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $ConfigUserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ConfigUser"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      user_id: number
      notificacoes_ativas: boolean
      frequencia_relatorios: $Enums.FrequenciaRelatorios
      moeda_preferencial: string
      idioma: string
      tema_app: $Enums.TemaApp
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["configUser"]>
    composites: {}
  }

  type ConfigUserGetPayload<S extends boolean | null | undefined | ConfigUserDefaultArgs> = $Result.GetResult<Prisma.$ConfigUserPayload, S>

  type ConfigUserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ConfigUserFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ConfigUserCountAggregateInputType | true
    }

  export interface ConfigUserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ConfigUser'], meta: { name: 'ConfigUser' } }
    /**
     * Find zero or one ConfigUser that matches the filter.
     * @param {ConfigUserFindUniqueArgs} args - Arguments to find a ConfigUser
     * @example
     * // Get one ConfigUser
     * const configUser = await prisma.configUser.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ConfigUserFindUniqueArgs>(args: SelectSubset<T, ConfigUserFindUniqueArgs<ExtArgs>>): Prisma__ConfigUserClient<$Result.GetResult<Prisma.$ConfigUserPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ConfigUser that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ConfigUserFindUniqueOrThrowArgs} args - Arguments to find a ConfigUser
     * @example
     * // Get one ConfigUser
     * const configUser = await prisma.configUser.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ConfigUserFindUniqueOrThrowArgs>(args: SelectSubset<T, ConfigUserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ConfigUserClient<$Result.GetResult<Prisma.$ConfigUserPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ConfigUser that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfigUserFindFirstArgs} args - Arguments to find a ConfigUser
     * @example
     * // Get one ConfigUser
     * const configUser = await prisma.configUser.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ConfigUserFindFirstArgs>(args?: SelectSubset<T, ConfigUserFindFirstArgs<ExtArgs>>): Prisma__ConfigUserClient<$Result.GetResult<Prisma.$ConfigUserPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ConfigUser that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfigUserFindFirstOrThrowArgs} args - Arguments to find a ConfigUser
     * @example
     * // Get one ConfigUser
     * const configUser = await prisma.configUser.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ConfigUserFindFirstOrThrowArgs>(args?: SelectSubset<T, ConfigUserFindFirstOrThrowArgs<ExtArgs>>): Prisma__ConfigUserClient<$Result.GetResult<Prisma.$ConfigUserPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ConfigUsers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfigUserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ConfigUsers
     * const configUsers = await prisma.configUser.findMany()
     * 
     * // Get first 10 ConfigUsers
     * const configUsers = await prisma.configUser.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const configUserWithIdOnly = await prisma.configUser.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ConfigUserFindManyArgs>(args?: SelectSubset<T, ConfigUserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConfigUserPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ConfigUser.
     * @param {ConfigUserCreateArgs} args - Arguments to create a ConfigUser.
     * @example
     * // Create one ConfigUser
     * const ConfigUser = await prisma.configUser.create({
     *   data: {
     *     // ... data to create a ConfigUser
     *   }
     * })
     * 
     */
    create<T extends ConfigUserCreateArgs>(args: SelectSubset<T, ConfigUserCreateArgs<ExtArgs>>): Prisma__ConfigUserClient<$Result.GetResult<Prisma.$ConfigUserPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ConfigUsers.
     * @param {ConfigUserCreateManyArgs} args - Arguments to create many ConfigUsers.
     * @example
     * // Create many ConfigUsers
     * const configUser = await prisma.configUser.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ConfigUserCreateManyArgs>(args?: SelectSubset<T, ConfigUserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ConfigUser.
     * @param {ConfigUserDeleteArgs} args - Arguments to delete one ConfigUser.
     * @example
     * // Delete one ConfigUser
     * const ConfigUser = await prisma.configUser.delete({
     *   where: {
     *     // ... filter to delete one ConfigUser
     *   }
     * })
     * 
     */
    delete<T extends ConfigUserDeleteArgs>(args: SelectSubset<T, ConfigUserDeleteArgs<ExtArgs>>): Prisma__ConfigUserClient<$Result.GetResult<Prisma.$ConfigUserPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ConfigUser.
     * @param {ConfigUserUpdateArgs} args - Arguments to update one ConfigUser.
     * @example
     * // Update one ConfigUser
     * const configUser = await prisma.configUser.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ConfigUserUpdateArgs>(args: SelectSubset<T, ConfigUserUpdateArgs<ExtArgs>>): Prisma__ConfigUserClient<$Result.GetResult<Prisma.$ConfigUserPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ConfigUsers.
     * @param {ConfigUserDeleteManyArgs} args - Arguments to filter ConfigUsers to delete.
     * @example
     * // Delete a few ConfigUsers
     * const { count } = await prisma.configUser.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ConfigUserDeleteManyArgs>(args?: SelectSubset<T, ConfigUserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ConfigUsers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfigUserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ConfigUsers
     * const configUser = await prisma.configUser.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ConfigUserUpdateManyArgs>(args: SelectSubset<T, ConfigUserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ConfigUser.
     * @param {ConfigUserUpsertArgs} args - Arguments to update or create a ConfigUser.
     * @example
     * // Update or create a ConfigUser
     * const configUser = await prisma.configUser.upsert({
     *   create: {
     *     // ... data to create a ConfigUser
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ConfigUser we want to update
     *   }
     * })
     */
    upsert<T extends ConfigUserUpsertArgs>(args: SelectSubset<T, ConfigUserUpsertArgs<ExtArgs>>): Prisma__ConfigUserClient<$Result.GetResult<Prisma.$ConfigUserPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ConfigUsers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfigUserCountArgs} args - Arguments to filter ConfigUsers to count.
     * @example
     * // Count the number of ConfigUsers
     * const count = await prisma.configUser.count({
     *   where: {
     *     // ... the filter for the ConfigUsers we want to count
     *   }
     * })
    **/
    count<T extends ConfigUserCountArgs>(
      args?: Subset<T, ConfigUserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ConfigUserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ConfigUser.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfigUserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ConfigUserAggregateArgs>(args: Subset<T, ConfigUserAggregateArgs>): Prisma.PrismaPromise<GetConfigUserAggregateType<T>>

    /**
     * Group by ConfigUser.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfigUserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ConfigUserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ConfigUserGroupByArgs['orderBy'] }
        : { orderBy?: ConfigUserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ConfigUserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetConfigUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ConfigUser model
   */
  readonly fields: ConfigUserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ConfigUser.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ConfigUserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ConfigUser model
   */ 
  interface ConfigUserFieldRefs {
    readonly id: FieldRef<"ConfigUser", 'Int'>
    readonly user_id: FieldRef<"ConfigUser", 'Int'>
    readonly notificacoes_ativas: FieldRef<"ConfigUser", 'Boolean'>
    readonly frequencia_relatorios: FieldRef<"ConfigUser", 'FrequenciaRelatorios'>
    readonly moeda_preferencial: FieldRef<"ConfigUser", 'String'>
    readonly idioma: FieldRef<"ConfigUser", 'String'>
    readonly tema_app: FieldRef<"ConfigUser", 'TemaApp'>
    readonly created_at: FieldRef<"ConfigUser", 'DateTime'>
    readonly updated_at: FieldRef<"ConfigUser", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ConfigUser findUnique
   */
  export type ConfigUserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfigUser
     */
    select?: ConfigUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfigUserInclude<ExtArgs> | null
    /**
     * Filter, which ConfigUser to fetch.
     */
    where: ConfigUserWhereUniqueInput
  }

  /**
   * ConfigUser findUniqueOrThrow
   */
  export type ConfigUserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfigUser
     */
    select?: ConfigUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfigUserInclude<ExtArgs> | null
    /**
     * Filter, which ConfigUser to fetch.
     */
    where: ConfigUserWhereUniqueInput
  }

  /**
   * ConfigUser findFirst
   */
  export type ConfigUserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfigUser
     */
    select?: ConfigUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfigUserInclude<ExtArgs> | null
    /**
     * Filter, which ConfigUser to fetch.
     */
    where?: ConfigUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConfigUsers to fetch.
     */
    orderBy?: ConfigUserOrderByWithRelationInput | ConfigUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ConfigUsers.
     */
    cursor?: ConfigUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConfigUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConfigUsers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ConfigUsers.
     */
    distinct?: ConfigUserScalarFieldEnum | ConfigUserScalarFieldEnum[]
  }

  /**
   * ConfigUser findFirstOrThrow
   */
  export type ConfigUserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfigUser
     */
    select?: ConfigUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfigUserInclude<ExtArgs> | null
    /**
     * Filter, which ConfigUser to fetch.
     */
    where?: ConfigUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConfigUsers to fetch.
     */
    orderBy?: ConfigUserOrderByWithRelationInput | ConfigUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ConfigUsers.
     */
    cursor?: ConfigUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConfigUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConfigUsers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ConfigUsers.
     */
    distinct?: ConfigUserScalarFieldEnum | ConfigUserScalarFieldEnum[]
  }

  /**
   * ConfigUser findMany
   */
  export type ConfigUserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfigUser
     */
    select?: ConfigUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfigUserInclude<ExtArgs> | null
    /**
     * Filter, which ConfigUsers to fetch.
     */
    where?: ConfigUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConfigUsers to fetch.
     */
    orderBy?: ConfigUserOrderByWithRelationInput | ConfigUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ConfigUsers.
     */
    cursor?: ConfigUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConfigUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConfigUsers.
     */
    skip?: number
    distinct?: ConfigUserScalarFieldEnum | ConfigUserScalarFieldEnum[]
  }

  /**
   * ConfigUser create
   */
  export type ConfigUserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfigUser
     */
    select?: ConfigUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfigUserInclude<ExtArgs> | null
    /**
     * The data needed to create a ConfigUser.
     */
    data: XOR<ConfigUserCreateInput, ConfigUserUncheckedCreateInput>
  }

  /**
   * ConfigUser createMany
   */
  export type ConfigUserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ConfigUsers.
     */
    data: ConfigUserCreateManyInput | ConfigUserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ConfigUser update
   */
  export type ConfigUserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfigUser
     */
    select?: ConfigUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfigUserInclude<ExtArgs> | null
    /**
     * The data needed to update a ConfigUser.
     */
    data: XOR<ConfigUserUpdateInput, ConfigUserUncheckedUpdateInput>
    /**
     * Choose, which ConfigUser to update.
     */
    where: ConfigUserWhereUniqueInput
  }

  /**
   * ConfigUser updateMany
   */
  export type ConfigUserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ConfigUsers.
     */
    data: XOR<ConfigUserUpdateManyMutationInput, ConfigUserUncheckedUpdateManyInput>
    /**
     * Filter which ConfigUsers to update
     */
    where?: ConfigUserWhereInput
  }

  /**
   * ConfigUser upsert
   */
  export type ConfigUserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfigUser
     */
    select?: ConfigUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfigUserInclude<ExtArgs> | null
    /**
     * The filter to search for the ConfigUser to update in case it exists.
     */
    where: ConfigUserWhereUniqueInput
    /**
     * In case the ConfigUser found by the `where` argument doesn't exist, create a new ConfigUser with this data.
     */
    create: XOR<ConfigUserCreateInput, ConfigUserUncheckedCreateInput>
    /**
     * In case the ConfigUser was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ConfigUserUpdateInput, ConfigUserUncheckedUpdateInput>
  }

  /**
   * ConfigUser delete
   */
  export type ConfigUserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfigUser
     */
    select?: ConfigUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfigUserInclude<ExtArgs> | null
    /**
     * Filter which ConfigUser to delete.
     */
    where: ConfigUserWhereUniqueInput
  }

  /**
   * ConfigUser deleteMany
   */
  export type ConfigUserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ConfigUsers to delete
     */
    where?: ConfigUserWhereInput
  }

  /**
   * ConfigUser without action
   */
  export type ConfigUserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfigUser
     */
    select?: ConfigUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfigUserInclude<ExtArgs> | null
  }


  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    id: number | null
    status: number | null
  }

  export type UserSumAggregateOutputType = {
    id: number | null
    status: number | null
  }

  export type UserMinAggregateOutputType = {
    id: number | null
    name: string | null
    cpf: string | null
    senha: string | null
    telefone: string | null
    data_nasc: Date | null
    status: number | null
    created_at: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: number | null
    name: string | null
    cpf: string | null
    senha: string | null
    telefone: string | null
    data_nasc: Date | null
    status: number | null
    created_at: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    name: number
    cpf: number
    senha: number
    telefone: number
    data_nasc: number
    status: number
    created_at: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    id?: true
    status?: true
  }

  export type UserSumAggregateInputType = {
    id?: true
    status?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    name?: true
    cpf?: true
    senha?: true
    telefone?: true
    data_nasc?: true
    status?: true
    created_at?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    name?: true
    cpf?: true
    senha?: true
    telefone?: true
    data_nasc?: true
    status?: true
    created_at?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    name?: true
    cpf?: true
    senha?: true
    telefone?: true
    data_nasc?: true
    status?: true
    created_at?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: number
    name: string
    cpf: string
    senha: string
    telefone: string
    data_nasc: Date
    status: number
    created_at: Date
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    cpf?: boolean
    senha?: boolean
    telefone?: boolean
    data_nasc?: boolean
    status?: boolean
    created_at?: boolean
    finProfiles?: boolean | User$finProfilesArgs<ExtArgs>
    finTransactions?: boolean | User$finTransactionsArgs<ExtArgs>
    configUsers?: boolean | User$configUsersArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>


  export type UserSelectScalar = {
    id?: boolean
    name?: boolean
    cpf?: boolean
    senha?: boolean
    telefone?: boolean
    data_nasc?: boolean
    status?: boolean
    created_at?: boolean
  }

  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    finProfiles?: boolean | User$finProfilesArgs<ExtArgs>
    finTransactions?: boolean | User$finTransactionsArgs<ExtArgs>
    configUsers?: boolean | User$configUsersArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      finProfiles: Prisma.$FinProfilePayload<ExtArgs>[]
      finTransactions: Prisma.$FinTransactionsPayload<ExtArgs>[]
      configUsers: Prisma.$ConfigUserPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      cpf: string
      senha: string
      telefone: string
      data_nasc: Date
      status: number
      created_at: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    finProfiles<T extends User$finProfilesArgs<ExtArgs> = {}>(args?: Subset<T, User$finProfilesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FinProfilePayload<ExtArgs>, T, "findMany"> | Null>
    finTransactions<T extends User$finTransactionsArgs<ExtArgs> = {}>(args?: Subset<T, User$finTransactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FinTransactionsPayload<ExtArgs>, T, "findMany"> | Null>
    configUsers<T extends User$configUsersArgs<ExtArgs> = {}>(args?: Subset<T, User$configUsersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConfigUserPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */ 
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'Int'>
    readonly name: FieldRef<"User", 'String'>
    readonly cpf: FieldRef<"User", 'String'>
    readonly senha: FieldRef<"User", 'String'>
    readonly telefone: FieldRef<"User", 'String'>
    readonly data_nasc: FieldRef<"User", 'DateTime'>
    readonly status: FieldRef<"User", 'Int'>
    readonly created_at: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
  }

  /**
   * User.finProfiles
   */
  export type User$finProfilesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinProfile
     */
    select?: FinProfileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinProfileInclude<ExtArgs> | null
    where?: FinProfileWhereInput
    orderBy?: FinProfileOrderByWithRelationInput | FinProfileOrderByWithRelationInput[]
    cursor?: FinProfileWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FinProfileScalarFieldEnum | FinProfileScalarFieldEnum[]
  }

  /**
   * User.finTransactions
   */
  export type User$finTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinTransactions
     */
    select?: FinTransactionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinTransactionsInclude<ExtArgs> | null
    where?: FinTransactionsWhereInput
    orderBy?: FinTransactionsOrderByWithRelationInput | FinTransactionsOrderByWithRelationInput[]
    cursor?: FinTransactionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FinTransactionsScalarFieldEnum | FinTransactionsScalarFieldEnum[]
  }

  /**
   * User.configUsers
   */
  export type User$configUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfigUser
     */
    select?: ConfigUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfigUserInclude<ExtArgs> | null
    where?: ConfigUserWhereInput
    orderBy?: ConfigUserOrderByWithRelationInput | ConfigUserOrderByWithRelationInput[]
    cursor?: ConfigUserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ConfigUserScalarFieldEnum | ConfigUserScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const FinProfileScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    renda_mensal: 'renda_mensal',
    despesas_fixas: 'despesas_fixas',
    despesas_variaveis: 'despesas_variaveis',
    objetivo_financeiro: 'objetivo_financeiro',
    perfil_risco: 'perfil_risco',
    patrimonio_atual: 'patrimonio_atual',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type FinProfileScalarFieldEnum = (typeof FinProfileScalarFieldEnum)[keyof typeof FinProfileScalarFieldEnum]


  export const FinTransactionsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    data_transacao: 'data_transacao',
    categoria_transacao: 'categoria_transacao',
    descricao: 'descricao',
    valor: 'valor',
    forma_pagamento: 'forma_pagamento'
  };

  export type FinTransactionsScalarFieldEnum = (typeof FinTransactionsScalarFieldEnum)[keyof typeof FinTransactionsScalarFieldEnum]


  export const ConfigUserScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    notificacoes_ativas: 'notificacoes_ativas',
    frequencia_relatorios: 'frequencia_relatorios',
    moeda_preferencial: 'moeda_preferencial',
    idioma: 'idioma',
    tema_app: 'tema_app',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type ConfigUserScalarFieldEnum = (typeof ConfigUserScalarFieldEnum)[keyof typeof ConfigUserScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    name: 'name',
    cpf: 'cpf',
    senha: 'senha',
    telefone: 'telefone',
    data_nasc: 'data_nasc',
    status: 'status',
    created_at: 'created_at'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const FinProfileOrderByRelevanceFieldEnum: {
    objetivo_financeiro: 'objetivo_financeiro',
    perfil_risco: 'perfil_risco'
  };

  export type FinProfileOrderByRelevanceFieldEnum = (typeof FinProfileOrderByRelevanceFieldEnum)[keyof typeof FinProfileOrderByRelevanceFieldEnum]


  export const FinTransactionsOrderByRelevanceFieldEnum: {
    categoria_transacao: 'categoria_transacao',
    descricao: 'descricao',
    forma_pagamento: 'forma_pagamento'
  };

  export type FinTransactionsOrderByRelevanceFieldEnum = (typeof FinTransactionsOrderByRelevanceFieldEnum)[keyof typeof FinTransactionsOrderByRelevanceFieldEnum]


  export const ConfigUserOrderByRelevanceFieldEnum: {
    moeda_preferencial: 'moeda_preferencial',
    idioma: 'idioma'
  };

  export type ConfigUserOrderByRelevanceFieldEnum = (typeof ConfigUserOrderByRelevanceFieldEnum)[keyof typeof ConfigUserOrderByRelevanceFieldEnum]


  export const UserOrderByRelevanceFieldEnum: {
    name: 'name',
    cpf: 'cpf',
    senha: 'senha',
    telefone: 'telefone'
  };

  export type UserOrderByRelevanceFieldEnum = (typeof UserOrderByRelevanceFieldEnum)[keyof typeof UserOrderByRelevanceFieldEnum]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'FrequenciaRelatorios'
   */
  export type EnumFrequenciaRelatoriosFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'FrequenciaRelatorios'>
    


  /**
   * Reference to a field of type 'TemaApp'
   */
  export type EnumTemaAppFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TemaApp'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type FinProfileWhereInput = {
    AND?: FinProfileWhereInput | FinProfileWhereInput[]
    OR?: FinProfileWhereInput[]
    NOT?: FinProfileWhereInput | FinProfileWhereInput[]
    id?: IntFilter<"FinProfile"> | number
    user_id?: IntFilter<"FinProfile"> | number
    renda_mensal?: DecimalNullableFilter<"FinProfile"> | Decimal | DecimalJsLike | number | string | null
    despesas_fixas?: DecimalNullableFilter<"FinProfile"> | Decimal | DecimalJsLike | number | string | null
    despesas_variaveis?: DecimalNullableFilter<"FinProfile"> | Decimal | DecimalJsLike | number | string | null
    objetivo_financeiro?: StringNullableFilter<"FinProfile"> | string | null
    perfil_risco?: StringNullableFilter<"FinProfile"> | string | null
    patrimonio_atual?: DecimalNullableFilter<"FinProfile"> | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeFilter<"FinProfile"> | Date | string
    updated_at?: DateTimeFilter<"FinProfile"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type FinProfileOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    renda_mensal?: SortOrderInput | SortOrder
    despesas_fixas?: SortOrderInput | SortOrder
    despesas_variaveis?: SortOrderInput | SortOrder
    objetivo_financeiro?: SortOrderInput | SortOrder
    perfil_risco?: SortOrderInput | SortOrder
    patrimonio_atual?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    user?: UserOrderByWithRelationInput
    _relevance?: FinProfileOrderByRelevanceInput
  }

  export type FinProfileWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    user_id?: number
    AND?: FinProfileWhereInput | FinProfileWhereInput[]
    OR?: FinProfileWhereInput[]
    NOT?: FinProfileWhereInput | FinProfileWhereInput[]
    renda_mensal?: DecimalNullableFilter<"FinProfile"> | Decimal | DecimalJsLike | number | string | null
    despesas_fixas?: DecimalNullableFilter<"FinProfile"> | Decimal | DecimalJsLike | number | string | null
    despesas_variaveis?: DecimalNullableFilter<"FinProfile"> | Decimal | DecimalJsLike | number | string | null
    objetivo_financeiro?: StringNullableFilter<"FinProfile"> | string | null
    perfil_risco?: StringNullableFilter<"FinProfile"> | string | null
    patrimonio_atual?: DecimalNullableFilter<"FinProfile"> | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeFilter<"FinProfile"> | Date | string
    updated_at?: DateTimeFilter<"FinProfile"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "user_id">

  export type FinProfileOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    renda_mensal?: SortOrderInput | SortOrder
    despesas_fixas?: SortOrderInput | SortOrder
    despesas_variaveis?: SortOrderInput | SortOrder
    objetivo_financeiro?: SortOrderInput | SortOrder
    perfil_risco?: SortOrderInput | SortOrder
    patrimonio_atual?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: FinProfileCountOrderByAggregateInput
    _avg?: FinProfileAvgOrderByAggregateInput
    _max?: FinProfileMaxOrderByAggregateInput
    _min?: FinProfileMinOrderByAggregateInput
    _sum?: FinProfileSumOrderByAggregateInput
  }

  export type FinProfileScalarWhereWithAggregatesInput = {
    AND?: FinProfileScalarWhereWithAggregatesInput | FinProfileScalarWhereWithAggregatesInput[]
    OR?: FinProfileScalarWhereWithAggregatesInput[]
    NOT?: FinProfileScalarWhereWithAggregatesInput | FinProfileScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"FinProfile"> | number
    user_id?: IntWithAggregatesFilter<"FinProfile"> | number
    renda_mensal?: DecimalNullableWithAggregatesFilter<"FinProfile"> | Decimal | DecimalJsLike | number | string | null
    despesas_fixas?: DecimalNullableWithAggregatesFilter<"FinProfile"> | Decimal | DecimalJsLike | number | string | null
    despesas_variaveis?: DecimalNullableWithAggregatesFilter<"FinProfile"> | Decimal | DecimalJsLike | number | string | null
    objetivo_financeiro?: StringNullableWithAggregatesFilter<"FinProfile"> | string | null
    perfil_risco?: StringNullableWithAggregatesFilter<"FinProfile"> | string | null
    patrimonio_atual?: DecimalNullableWithAggregatesFilter<"FinProfile"> | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeWithAggregatesFilter<"FinProfile"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"FinProfile"> | Date | string
  }

  export type FinTransactionsWhereInput = {
    AND?: FinTransactionsWhereInput | FinTransactionsWhereInput[]
    OR?: FinTransactionsWhereInput[]
    NOT?: FinTransactionsWhereInput | FinTransactionsWhereInput[]
    id?: IntFilter<"FinTransactions"> | number
    user_id?: IntFilter<"FinTransactions"> | number
    data_transacao?: DateTimeFilter<"FinTransactions"> | Date | string
    categoria_transacao?: StringNullableFilter<"FinTransactions"> | string | null
    descricao?: StringNullableFilter<"FinTransactions"> | string | null
    valor?: DecimalFilter<"FinTransactions"> | Decimal | DecimalJsLike | number | string
    forma_pagamento?: StringNullableFilter<"FinTransactions"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type FinTransactionsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    data_transacao?: SortOrder
    categoria_transacao?: SortOrderInput | SortOrder
    descricao?: SortOrderInput | SortOrder
    valor?: SortOrder
    forma_pagamento?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
    _relevance?: FinTransactionsOrderByRelevanceInput
  }

  export type FinTransactionsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: FinTransactionsWhereInput | FinTransactionsWhereInput[]
    OR?: FinTransactionsWhereInput[]
    NOT?: FinTransactionsWhereInput | FinTransactionsWhereInput[]
    user_id?: IntFilter<"FinTransactions"> | number
    data_transacao?: DateTimeFilter<"FinTransactions"> | Date | string
    categoria_transacao?: StringNullableFilter<"FinTransactions"> | string | null
    descricao?: StringNullableFilter<"FinTransactions"> | string | null
    valor?: DecimalFilter<"FinTransactions"> | Decimal | DecimalJsLike | number | string
    forma_pagamento?: StringNullableFilter<"FinTransactions"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type FinTransactionsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    data_transacao?: SortOrder
    categoria_transacao?: SortOrderInput | SortOrder
    descricao?: SortOrderInput | SortOrder
    valor?: SortOrder
    forma_pagamento?: SortOrderInput | SortOrder
    _count?: FinTransactionsCountOrderByAggregateInput
    _avg?: FinTransactionsAvgOrderByAggregateInput
    _max?: FinTransactionsMaxOrderByAggregateInput
    _min?: FinTransactionsMinOrderByAggregateInput
    _sum?: FinTransactionsSumOrderByAggregateInput
  }

  export type FinTransactionsScalarWhereWithAggregatesInput = {
    AND?: FinTransactionsScalarWhereWithAggregatesInput | FinTransactionsScalarWhereWithAggregatesInput[]
    OR?: FinTransactionsScalarWhereWithAggregatesInput[]
    NOT?: FinTransactionsScalarWhereWithAggregatesInput | FinTransactionsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"FinTransactions"> | number
    user_id?: IntWithAggregatesFilter<"FinTransactions"> | number
    data_transacao?: DateTimeWithAggregatesFilter<"FinTransactions"> | Date | string
    categoria_transacao?: StringNullableWithAggregatesFilter<"FinTransactions"> | string | null
    descricao?: StringNullableWithAggregatesFilter<"FinTransactions"> | string | null
    valor?: DecimalWithAggregatesFilter<"FinTransactions"> | Decimal | DecimalJsLike | number | string
    forma_pagamento?: StringNullableWithAggregatesFilter<"FinTransactions"> | string | null
  }

  export type ConfigUserWhereInput = {
    AND?: ConfigUserWhereInput | ConfigUserWhereInput[]
    OR?: ConfigUserWhereInput[]
    NOT?: ConfigUserWhereInput | ConfigUserWhereInput[]
    id?: IntFilter<"ConfigUser"> | number
    user_id?: IntFilter<"ConfigUser"> | number
    notificacoes_ativas?: BoolFilter<"ConfigUser"> | boolean
    frequencia_relatorios?: EnumFrequenciaRelatoriosFilter<"ConfigUser"> | $Enums.FrequenciaRelatorios
    moeda_preferencial?: StringFilter<"ConfigUser"> | string
    idioma?: StringFilter<"ConfigUser"> | string
    tema_app?: EnumTemaAppFilter<"ConfigUser"> | $Enums.TemaApp
    created_at?: DateTimeFilter<"ConfigUser"> | Date | string
    updated_at?: DateTimeFilter<"ConfigUser"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type ConfigUserOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    notificacoes_ativas?: SortOrder
    frequencia_relatorios?: SortOrder
    moeda_preferencial?: SortOrder
    idioma?: SortOrder
    tema_app?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    user?: UserOrderByWithRelationInput
    _relevance?: ConfigUserOrderByRelevanceInput
  }

  export type ConfigUserWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    user_id?: number
    AND?: ConfigUserWhereInput | ConfigUserWhereInput[]
    OR?: ConfigUserWhereInput[]
    NOT?: ConfigUserWhereInput | ConfigUserWhereInput[]
    notificacoes_ativas?: BoolFilter<"ConfigUser"> | boolean
    frequencia_relatorios?: EnumFrequenciaRelatoriosFilter<"ConfigUser"> | $Enums.FrequenciaRelatorios
    moeda_preferencial?: StringFilter<"ConfigUser"> | string
    idioma?: StringFilter<"ConfigUser"> | string
    tema_app?: EnumTemaAppFilter<"ConfigUser"> | $Enums.TemaApp
    created_at?: DateTimeFilter<"ConfigUser"> | Date | string
    updated_at?: DateTimeFilter<"ConfigUser"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "user_id">

  export type ConfigUserOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    notificacoes_ativas?: SortOrder
    frequencia_relatorios?: SortOrder
    moeda_preferencial?: SortOrder
    idioma?: SortOrder
    tema_app?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: ConfigUserCountOrderByAggregateInput
    _avg?: ConfigUserAvgOrderByAggregateInput
    _max?: ConfigUserMaxOrderByAggregateInput
    _min?: ConfigUserMinOrderByAggregateInput
    _sum?: ConfigUserSumOrderByAggregateInput
  }

  export type ConfigUserScalarWhereWithAggregatesInput = {
    AND?: ConfigUserScalarWhereWithAggregatesInput | ConfigUserScalarWhereWithAggregatesInput[]
    OR?: ConfigUserScalarWhereWithAggregatesInput[]
    NOT?: ConfigUserScalarWhereWithAggregatesInput | ConfigUserScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ConfigUser"> | number
    user_id?: IntWithAggregatesFilter<"ConfigUser"> | number
    notificacoes_ativas?: BoolWithAggregatesFilter<"ConfigUser"> | boolean
    frequencia_relatorios?: EnumFrequenciaRelatoriosWithAggregatesFilter<"ConfigUser"> | $Enums.FrequenciaRelatorios
    moeda_preferencial?: StringWithAggregatesFilter<"ConfigUser"> | string
    idioma?: StringWithAggregatesFilter<"ConfigUser"> | string
    tema_app?: EnumTemaAppWithAggregatesFilter<"ConfigUser"> | $Enums.TemaApp
    created_at?: DateTimeWithAggregatesFilter<"ConfigUser"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"ConfigUser"> | Date | string
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: IntFilter<"User"> | number
    name?: StringFilter<"User"> | string
    cpf?: StringFilter<"User"> | string
    senha?: StringFilter<"User"> | string
    telefone?: StringFilter<"User"> | string
    data_nasc?: DateTimeFilter<"User"> | Date | string
    status?: IntFilter<"User"> | number
    created_at?: DateTimeFilter<"User"> | Date | string
    finProfiles?: FinProfileListRelationFilter
    finTransactions?: FinTransactionsListRelationFilter
    configUsers?: ConfigUserListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    cpf?: SortOrder
    senha?: SortOrder
    telefone?: SortOrder
    data_nasc?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    finProfiles?: FinProfileOrderByRelationAggregateInput
    finTransactions?: FinTransactionsOrderByRelationAggregateInput
    configUsers?: ConfigUserOrderByRelationAggregateInput
    _relevance?: UserOrderByRelevanceInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    name?: StringFilter<"User"> | string
    cpf?: StringFilter<"User"> | string
    senha?: StringFilter<"User"> | string
    telefone?: StringFilter<"User"> | string
    data_nasc?: DateTimeFilter<"User"> | Date | string
    status?: IntFilter<"User"> | number
    created_at?: DateTimeFilter<"User"> | Date | string
    finProfiles?: FinProfileListRelationFilter
    finTransactions?: FinTransactionsListRelationFilter
    configUsers?: ConfigUserListRelationFilter
  }, "id">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    cpf?: SortOrder
    senha?: SortOrder
    telefone?: SortOrder
    data_nasc?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"User"> | number
    name?: StringWithAggregatesFilter<"User"> | string
    cpf?: StringWithAggregatesFilter<"User"> | string
    senha?: StringWithAggregatesFilter<"User"> | string
    telefone?: StringWithAggregatesFilter<"User"> | string
    data_nasc?: DateTimeWithAggregatesFilter<"User"> | Date | string
    status?: IntWithAggregatesFilter<"User"> | number
    created_at?: DateTimeWithAggregatesFilter<"User"> | Date | string
  }

  export type FinProfileCreateInput = {
    renda_mensal?: Decimal | DecimalJsLike | number | string | null
    despesas_fixas?: Decimal | DecimalJsLike | number | string | null
    despesas_variaveis?: Decimal | DecimalJsLike | number | string | null
    objetivo_financeiro?: string | null
    perfil_risco?: string | null
    patrimonio_atual?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string
    updated_at?: Date | string
    user: UserCreateNestedOneWithoutFinProfilesInput
  }

  export type FinProfileUncheckedCreateInput = {
    id?: number
    user_id: number
    renda_mensal?: Decimal | DecimalJsLike | number | string | null
    despesas_fixas?: Decimal | DecimalJsLike | number | string | null
    despesas_variaveis?: Decimal | DecimalJsLike | number | string | null
    objetivo_financeiro?: string | null
    perfil_risco?: string | null
    patrimonio_atual?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type FinProfileUpdateInput = {
    renda_mensal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    despesas_fixas?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    despesas_variaveis?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    objetivo_financeiro?: NullableStringFieldUpdateOperationsInput | string | null
    perfil_risco?: NullableStringFieldUpdateOperationsInput | string | null
    patrimonio_atual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutFinProfilesNestedInput
  }

  export type FinProfileUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    renda_mensal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    despesas_fixas?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    despesas_variaveis?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    objetivo_financeiro?: NullableStringFieldUpdateOperationsInput | string | null
    perfil_risco?: NullableStringFieldUpdateOperationsInput | string | null
    patrimonio_atual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FinProfileCreateManyInput = {
    id?: number
    user_id: number
    renda_mensal?: Decimal | DecimalJsLike | number | string | null
    despesas_fixas?: Decimal | DecimalJsLike | number | string | null
    despesas_variaveis?: Decimal | DecimalJsLike | number | string | null
    objetivo_financeiro?: string | null
    perfil_risco?: string | null
    patrimonio_atual?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type FinProfileUpdateManyMutationInput = {
    renda_mensal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    despesas_fixas?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    despesas_variaveis?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    objetivo_financeiro?: NullableStringFieldUpdateOperationsInput | string | null
    perfil_risco?: NullableStringFieldUpdateOperationsInput | string | null
    patrimonio_atual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FinProfileUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    renda_mensal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    despesas_fixas?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    despesas_variaveis?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    objetivo_financeiro?: NullableStringFieldUpdateOperationsInput | string | null
    perfil_risco?: NullableStringFieldUpdateOperationsInput | string | null
    patrimonio_atual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FinTransactionsCreateInput = {
    data_transacao: Date | string
    categoria_transacao?: string | null
    descricao?: string | null
    valor: Decimal | DecimalJsLike | number | string
    forma_pagamento?: string | null
    user: UserCreateNestedOneWithoutFinTransactionsInput
  }

  export type FinTransactionsUncheckedCreateInput = {
    id?: number
    user_id: number
    data_transacao: Date | string
    categoria_transacao?: string | null
    descricao?: string | null
    valor: Decimal | DecimalJsLike | number | string
    forma_pagamento?: string | null
  }

  export type FinTransactionsUpdateInput = {
    data_transacao?: DateTimeFieldUpdateOperationsInput | Date | string
    categoria_transacao?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    forma_pagamento?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutFinTransactionsNestedInput
  }

  export type FinTransactionsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    data_transacao?: DateTimeFieldUpdateOperationsInput | Date | string
    categoria_transacao?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    forma_pagamento?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FinTransactionsCreateManyInput = {
    id?: number
    user_id: number
    data_transacao: Date | string
    categoria_transacao?: string | null
    descricao?: string | null
    valor: Decimal | DecimalJsLike | number | string
    forma_pagamento?: string | null
  }

  export type FinTransactionsUpdateManyMutationInput = {
    data_transacao?: DateTimeFieldUpdateOperationsInput | Date | string
    categoria_transacao?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    forma_pagamento?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FinTransactionsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    data_transacao?: DateTimeFieldUpdateOperationsInput | Date | string
    categoria_transacao?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    forma_pagamento?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ConfigUserCreateInput = {
    notificacoes_ativas?: boolean
    frequencia_relatorios?: $Enums.FrequenciaRelatorios
    moeda_preferencial?: string
    idioma?: string
    tema_app?: $Enums.TemaApp
    created_at?: Date | string
    updated_at?: Date | string
    user: UserCreateNestedOneWithoutConfigUsersInput
  }

  export type ConfigUserUncheckedCreateInput = {
    id?: number
    user_id: number
    notificacoes_ativas?: boolean
    frequencia_relatorios?: $Enums.FrequenciaRelatorios
    moeda_preferencial?: string
    idioma?: string
    tema_app?: $Enums.TemaApp
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type ConfigUserUpdateInput = {
    notificacoes_ativas?: BoolFieldUpdateOperationsInput | boolean
    frequencia_relatorios?: EnumFrequenciaRelatoriosFieldUpdateOperationsInput | $Enums.FrequenciaRelatorios
    moeda_preferencial?: StringFieldUpdateOperationsInput | string
    idioma?: StringFieldUpdateOperationsInput | string
    tema_app?: EnumTemaAppFieldUpdateOperationsInput | $Enums.TemaApp
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutConfigUsersNestedInput
  }

  export type ConfigUserUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    notificacoes_ativas?: BoolFieldUpdateOperationsInput | boolean
    frequencia_relatorios?: EnumFrequenciaRelatoriosFieldUpdateOperationsInput | $Enums.FrequenciaRelatorios
    moeda_preferencial?: StringFieldUpdateOperationsInput | string
    idioma?: StringFieldUpdateOperationsInput | string
    tema_app?: EnumTemaAppFieldUpdateOperationsInput | $Enums.TemaApp
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConfigUserCreateManyInput = {
    id?: number
    user_id: number
    notificacoes_ativas?: boolean
    frequencia_relatorios?: $Enums.FrequenciaRelatorios
    moeda_preferencial?: string
    idioma?: string
    tema_app?: $Enums.TemaApp
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type ConfigUserUpdateManyMutationInput = {
    notificacoes_ativas?: BoolFieldUpdateOperationsInput | boolean
    frequencia_relatorios?: EnumFrequenciaRelatoriosFieldUpdateOperationsInput | $Enums.FrequenciaRelatorios
    moeda_preferencial?: StringFieldUpdateOperationsInput | string
    idioma?: StringFieldUpdateOperationsInput | string
    tema_app?: EnumTemaAppFieldUpdateOperationsInput | $Enums.TemaApp
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConfigUserUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    notificacoes_ativas?: BoolFieldUpdateOperationsInput | boolean
    frequencia_relatorios?: EnumFrequenciaRelatoriosFieldUpdateOperationsInput | $Enums.FrequenciaRelatorios
    moeda_preferencial?: StringFieldUpdateOperationsInput | string
    idioma?: StringFieldUpdateOperationsInput | string
    tema_app?: EnumTemaAppFieldUpdateOperationsInput | $Enums.TemaApp
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreateInput = {
    name: string
    cpf: string
    senha: string
    telefone: string
    data_nasc: Date | string
    status: number
    created_at?: Date | string
    finProfiles?: FinProfileCreateNestedManyWithoutUserInput
    finTransactions?: FinTransactionsCreateNestedManyWithoutUserInput
    configUsers?: ConfigUserCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: number
    name: string
    cpf: string
    senha: string
    telefone: string
    data_nasc: Date | string
    status: number
    created_at?: Date | string
    finProfiles?: FinProfileUncheckedCreateNestedManyWithoutUserInput
    finTransactions?: FinTransactionsUncheckedCreateNestedManyWithoutUserInput
    configUsers?: ConfigUserUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    data_nasc?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    finProfiles?: FinProfileUpdateManyWithoutUserNestedInput
    finTransactions?: FinTransactionsUpdateManyWithoutUserNestedInput
    configUsers?: ConfigUserUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    data_nasc?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    finProfiles?: FinProfileUncheckedUpdateManyWithoutUserNestedInput
    finTransactions?: FinTransactionsUncheckedUpdateManyWithoutUserNestedInput
    configUsers?: ConfigUserUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id?: number
    name: string
    cpf: string
    senha: string
    telefone: string
    data_nasc: Date | string
    status: number
    created_at?: Date | string
  }

  export type UserUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    data_nasc?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    data_nasc?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type FinProfileOrderByRelevanceInput = {
    fields: FinProfileOrderByRelevanceFieldEnum | FinProfileOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type FinProfileCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    renda_mensal?: SortOrder
    despesas_fixas?: SortOrder
    despesas_variaveis?: SortOrder
    objetivo_financeiro?: SortOrder
    perfil_risco?: SortOrder
    patrimonio_atual?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type FinProfileAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    renda_mensal?: SortOrder
    despesas_fixas?: SortOrder
    despesas_variaveis?: SortOrder
    patrimonio_atual?: SortOrder
  }

  export type FinProfileMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    renda_mensal?: SortOrder
    despesas_fixas?: SortOrder
    despesas_variaveis?: SortOrder
    objetivo_financeiro?: SortOrder
    perfil_risco?: SortOrder
    patrimonio_atual?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type FinProfileMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    renda_mensal?: SortOrder
    despesas_fixas?: SortOrder
    despesas_variaveis?: SortOrder
    objetivo_financeiro?: SortOrder
    perfil_risco?: SortOrder
    patrimonio_atual?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type FinProfileSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    renda_mensal?: SortOrder
    despesas_fixas?: SortOrder
    despesas_variaveis?: SortOrder
    patrimonio_atual?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type FinTransactionsOrderByRelevanceInput = {
    fields: FinTransactionsOrderByRelevanceFieldEnum | FinTransactionsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type FinTransactionsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    data_transacao?: SortOrder
    categoria_transacao?: SortOrder
    descricao?: SortOrder
    valor?: SortOrder
    forma_pagamento?: SortOrder
  }

  export type FinTransactionsAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    valor?: SortOrder
  }

  export type FinTransactionsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    data_transacao?: SortOrder
    categoria_transacao?: SortOrder
    descricao?: SortOrder
    valor?: SortOrder
    forma_pagamento?: SortOrder
  }

  export type FinTransactionsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    data_transacao?: SortOrder
    categoria_transacao?: SortOrder
    descricao?: SortOrder
    valor?: SortOrder
    forma_pagamento?: SortOrder
  }

  export type FinTransactionsSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    valor?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type EnumFrequenciaRelatoriosFilter<$PrismaModel = never> = {
    equals?: $Enums.FrequenciaRelatorios | EnumFrequenciaRelatoriosFieldRefInput<$PrismaModel>
    in?: $Enums.FrequenciaRelatorios[]
    notIn?: $Enums.FrequenciaRelatorios[]
    not?: NestedEnumFrequenciaRelatoriosFilter<$PrismaModel> | $Enums.FrequenciaRelatorios
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type EnumTemaAppFilter<$PrismaModel = never> = {
    equals?: $Enums.TemaApp | EnumTemaAppFieldRefInput<$PrismaModel>
    in?: $Enums.TemaApp[]
    notIn?: $Enums.TemaApp[]
    not?: NestedEnumTemaAppFilter<$PrismaModel> | $Enums.TemaApp
  }

  export type ConfigUserOrderByRelevanceInput = {
    fields: ConfigUserOrderByRelevanceFieldEnum | ConfigUserOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ConfigUserCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    notificacoes_ativas?: SortOrder
    frequencia_relatorios?: SortOrder
    moeda_preferencial?: SortOrder
    idioma?: SortOrder
    tema_app?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type ConfigUserAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
  }

  export type ConfigUserMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    notificacoes_ativas?: SortOrder
    frequencia_relatorios?: SortOrder
    moeda_preferencial?: SortOrder
    idioma?: SortOrder
    tema_app?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type ConfigUserMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    notificacoes_ativas?: SortOrder
    frequencia_relatorios?: SortOrder
    moeda_preferencial?: SortOrder
    idioma?: SortOrder
    tema_app?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type ConfigUserSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type EnumFrequenciaRelatoriosWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.FrequenciaRelatorios | EnumFrequenciaRelatoriosFieldRefInput<$PrismaModel>
    in?: $Enums.FrequenciaRelatorios[]
    notIn?: $Enums.FrequenciaRelatorios[]
    not?: NestedEnumFrequenciaRelatoriosWithAggregatesFilter<$PrismaModel> | $Enums.FrequenciaRelatorios
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumFrequenciaRelatoriosFilter<$PrismaModel>
    _max?: NestedEnumFrequenciaRelatoriosFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type EnumTemaAppWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TemaApp | EnumTemaAppFieldRefInput<$PrismaModel>
    in?: $Enums.TemaApp[]
    notIn?: $Enums.TemaApp[]
    not?: NestedEnumTemaAppWithAggregatesFilter<$PrismaModel> | $Enums.TemaApp
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTemaAppFilter<$PrismaModel>
    _max?: NestedEnumTemaAppFilter<$PrismaModel>
  }

  export type FinProfileListRelationFilter = {
    every?: FinProfileWhereInput
    some?: FinProfileWhereInput
    none?: FinProfileWhereInput
  }

  export type FinTransactionsListRelationFilter = {
    every?: FinTransactionsWhereInput
    some?: FinTransactionsWhereInput
    none?: FinTransactionsWhereInput
  }

  export type ConfigUserListRelationFilter = {
    every?: ConfigUserWhereInput
    some?: ConfigUserWhereInput
    none?: ConfigUserWhereInput
  }

  export type FinProfileOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FinTransactionsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ConfigUserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserOrderByRelevanceInput = {
    fields: UserOrderByRelevanceFieldEnum | UserOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    cpf?: SortOrder
    senha?: SortOrder
    telefone?: SortOrder
    data_nasc?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    cpf?: SortOrder
    senha?: SortOrder
    telefone?: SortOrder
    data_nasc?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    cpf?: SortOrder
    senha?: SortOrder
    telefone?: SortOrder
    data_nasc?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
  }

  export type UserCreateNestedOneWithoutFinProfilesInput = {
    create?: XOR<UserCreateWithoutFinProfilesInput, UserUncheckedCreateWithoutFinProfilesInput>
    connectOrCreate?: UserCreateOrConnectWithoutFinProfilesInput
    connect?: UserWhereUniqueInput
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type UserUpdateOneRequiredWithoutFinProfilesNestedInput = {
    create?: XOR<UserCreateWithoutFinProfilesInput, UserUncheckedCreateWithoutFinProfilesInput>
    connectOrCreate?: UserCreateOrConnectWithoutFinProfilesInput
    upsert?: UserUpsertWithoutFinProfilesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFinProfilesInput, UserUpdateWithoutFinProfilesInput>, UserUncheckedUpdateWithoutFinProfilesInput>
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UserCreateNestedOneWithoutFinTransactionsInput = {
    create?: XOR<UserCreateWithoutFinTransactionsInput, UserUncheckedCreateWithoutFinTransactionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutFinTransactionsInput
    connect?: UserWhereUniqueInput
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type UserUpdateOneRequiredWithoutFinTransactionsNestedInput = {
    create?: XOR<UserCreateWithoutFinTransactionsInput, UserUncheckedCreateWithoutFinTransactionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutFinTransactionsInput
    upsert?: UserUpsertWithoutFinTransactionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFinTransactionsInput, UserUpdateWithoutFinTransactionsInput>, UserUncheckedUpdateWithoutFinTransactionsInput>
  }

  export type UserCreateNestedOneWithoutConfigUsersInput = {
    create?: XOR<UserCreateWithoutConfigUsersInput, UserUncheckedCreateWithoutConfigUsersInput>
    connectOrCreate?: UserCreateOrConnectWithoutConfigUsersInput
    connect?: UserWhereUniqueInput
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type EnumFrequenciaRelatoriosFieldUpdateOperationsInput = {
    set?: $Enums.FrequenciaRelatorios
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type EnumTemaAppFieldUpdateOperationsInput = {
    set?: $Enums.TemaApp
  }

  export type UserUpdateOneRequiredWithoutConfigUsersNestedInput = {
    create?: XOR<UserCreateWithoutConfigUsersInput, UserUncheckedCreateWithoutConfigUsersInput>
    connectOrCreate?: UserCreateOrConnectWithoutConfigUsersInput
    upsert?: UserUpsertWithoutConfigUsersInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutConfigUsersInput, UserUpdateWithoutConfigUsersInput>, UserUncheckedUpdateWithoutConfigUsersInput>
  }

  export type FinProfileCreateNestedManyWithoutUserInput = {
    create?: XOR<FinProfileCreateWithoutUserInput, FinProfileUncheckedCreateWithoutUserInput> | FinProfileCreateWithoutUserInput[] | FinProfileUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FinProfileCreateOrConnectWithoutUserInput | FinProfileCreateOrConnectWithoutUserInput[]
    createMany?: FinProfileCreateManyUserInputEnvelope
    connect?: FinProfileWhereUniqueInput | FinProfileWhereUniqueInput[]
  }

  export type FinTransactionsCreateNestedManyWithoutUserInput = {
    create?: XOR<FinTransactionsCreateWithoutUserInput, FinTransactionsUncheckedCreateWithoutUserInput> | FinTransactionsCreateWithoutUserInput[] | FinTransactionsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FinTransactionsCreateOrConnectWithoutUserInput | FinTransactionsCreateOrConnectWithoutUserInput[]
    createMany?: FinTransactionsCreateManyUserInputEnvelope
    connect?: FinTransactionsWhereUniqueInput | FinTransactionsWhereUniqueInput[]
  }

  export type ConfigUserCreateNestedManyWithoutUserInput = {
    create?: XOR<ConfigUserCreateWithoutUserInput, ConfigUserUncheckedCreateWithoutUserInput> | ConfigUserCreateWithoutUserInput[] | ConfigUserUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ConfigUserCreateOrConnectWithoutUserInput | ConfigUserCreateOrConnectWithoutUserInput[]
    createMany?: ConfigUserCreateManyUserInputEnvelope
    connect?: ConfigUserWhereUniqueInput | ConfigUserWhereUniqueInput[]
  }

  export type FinProfileUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<FinProfileCreateWithoutUserInput, FinProfileUncheckedCreateWithoutUserInput> | FinProfileCreateWithoutUserInput[] | FinProfileUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FinProfileCreateOrConnectWithoutUserInput | FinProfileCreateOrConnectWithoutUserInput[]
    createMany?: FinProfileCreateManyUserInputEnvelope
    connect?: FinProfileWhereUniqueInput | FinProfileWhereUniqueInput[]
  }

  export type FinTransactionsUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<FinTransactionsCreateWithoutUserInput, FinTransactionsUncheckedCreateWithoutUserInput> | FinTransactionsCreateWithoutUserInput[] | FinTransactionsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FinTransactionsCreateOrConnectWithoutUserInput | FinTransactionsCreateOrConnectWithoutUserInput[]
    createMany?: FinTransactionsCreateManyUserInputEnvelope
    connect?: FinTransactionsWhereUniqueInput | FinTransactionsWhereUniqueInput[]
  }

  export type ConfigUserUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<ConfigUserCreateWithoutUserInput, ConfigUserUncheckedCreateWithoutUserInput> | ConfigUserCreateWithoutUserInput[] | ConfigUserUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ConfigUserCreateOrConnectWithoutUserInput | ConfigUserCreateOrConnectWithoutUserInput[]
    createMany?: ConfigUserCreateManyUserInputEnvelope
    connect?: ConfigUserWhereUniqueInput | ConfigUserWhereUniqueInput[]
  }

  export type FinProfileUpdateManyWithoutUserNestedInput = {
    create?: XOR<FinProfileCreateWithoutUserInput, FinProfileUncheckedCreateWithoutUserInput> | FinProfileCreateWithoutUserInput[] | FinProfileUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FinProfileCreateOrConnectWithoutUserInput | FinProfileCreateOrConnectWithoutUserInput[]
    upsert?: FinProfileUpsertWithWhereUniqueWithoutUserInput | FinProfileUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: FinProfileCreateManyUserInputEnvelope
    set?: FinProfileWhereUniqueInput | FinProfileWhereUniqueInput[]
    disconnect?: FinProfileWhereUniqueInput | FinProfileWhereUniqueInput[]
    delete?: FinProfileWhereUniqueInput | FinProfileWhereUniqueInput[]
    connect?: FinProfileWhereUniqueInput | FinProfileWhereUniqueInput[]
    update?: FinProfileUpdateWithWhereUniqueWithoutUserInput | FinProfileUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: FinProfileUpdateManyWithWhereWithoutUserInput | FinProfileUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: FinProfileScalarWhereInput | FinProfileScalarWhereInput[]
  }

  export type FinTransactionsUpdateManyWithoutUserNestedInput = {
    create?: XOR<FinTransactionsCreateWithoutUserInput, FinTransactionsUncheckedCreateWithoutUserInput> | FinTransactionsCreateWithoutUserInput[] | FinTransactionsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FinTransactionsCreateOrConnectWithoutUserInput | FinTransactionsCreateOrConnectWithoutUserInput[]
    upsert?: FinTransactionsUpsertWithWhereUniqueWithoutUserInput | FinTransactionsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: FinTransactionsCreateManyUserInputEnvelope
    set?: FinTransactionsWhereUniqueInput | FinTransactionsWhereUniqueInput[]
    disconnect?: FinTransactionsWhereUniqueInput | FinTransactionsWhereUniqueInput[]
    delete?: FinTransactionsWhereUniqueInput | FinTransactionsWhereUniqueInput[]
    connect?: FinTransactionsWhereUniqueInput | FinTransactionsWhereUniqueInput[]
    update?: FinTransactionsUpdateWithWhereUniqueWithoutUserInput | FinTransactionsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: FinTransactionsUpdateManyWithWhereWithoutUserInput | FinTransactionsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: FinTransactionsScalarWhereInput | FinTransactionsScalarWhereInput[]
  }

  export type ConfigUserUpdateManyWithoutUserNestedInput = {
    create?: XOR<ConfigUserCreateWithoutUserInput, ConfigUserUncheckedCreateWithoutUserInput> | ConfigUserCreateWithoutUserInput[] | ConfigUserUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ConfigUserCreateOrConnectWithoutUserInput | ConfigUserCreateOrConnectWithoutUserInput[]
    upsert?: ConfigUserUpsertWithWhereUniqueWithoutUserInput | ConfigUserUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ConfigUserCreateManyUserInputEnvelope
    set?: ConfigUserWhereUniqueInput | ConfigUserWhereUniqueInput[]
    disconnect?: ConfigUserWhereUniqueInput | ConfigUserWhereUniqueInput[]
    delete?: ConfigUserWhereUniqueInput | ConfigUserWhereUniqueInput[]
    connect?: ConfigUserWhereUniqueInput | ConfigUserWhereUniqueInput[]
    update?: ConfigUserUpdateWithWhereUniqueWithoutUserInput | ConfigUserUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ConfigUserUpdateManyWithWhereWithoutUserInput | ConfigUserUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ConfigUserScalarWhereInput | ConfigUserScalarWhereInput[]
  }

  export type FinProfileUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<FinProfileCreateWithoutUserInput, FinProfileUncheckedCreateWithoutUserInput> | FinProfileCreateWithoutUserInput[] | FinProfileUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FinProfileCreateOrConnectWithoutUserInput | FinProfileCreateOrConnectWithoutUserInput[]
    upsert?: FinProfileUpsertWithWhereUniqueWithoutUserInput | FinProfileUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: FinProfileCreateManyUserInputEnvelope
    set?: FinProfileWhereUniqueInput | FinProfileWhereUniqueInput[]
    disconnect?: FinProfileWhereUniqueInput | FinProfileWhereUniqueInput[]
    delete?: FinProfileWhereUniqueInput | FinProfileWhereUniqueInput[]
    connect?: FinProfileWhereUniqueInput | FinProfileWhereUniqueInput[]
    update?: FinProfileUpdateWithWhereUniqueWithoutUserInput | FinProfileUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: FinProfileUpdateManyWithWhereWithoutUserInput | FinProfileUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: FinProfileScalarWhereInput | FinProfileScalarWhereInput[]
  }

  export type FinTransactionsUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<FinTransactionsCreateWithoutUserInput, FinTransactionsUncheckedCreateWithoutUserInput> | FinTransactionsCreateWithoutUserInput[] | FinTransactionsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FinTransactionsCreateOrConnectWithoutUserInput | FinTransactionsCreateOrConnectWithoutUserInput[]
    upsert?: FinTransactionsUpsertWithWhereUniqueWithoutUserInput | FinTransactionsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: FinTransactionsCreateManyUserInputEnvelope
    set?: FinTransactionsWhereUniqueInput | FinTransactionsWhereUniqueInput[]
    disconnect?: FinTransactionsWhereUniqueInput | FinTransactionsWhereUniqueInput[]
    delete?: FinTransactionsWhereUniqueInput | FinTransactionsWhereUniqueInput[]
    connect?: FinTransactionsWhereUniqueInput | FinTransactionsWhereUniqueInput[]
    update?: FinTransactionsUpdateWithWhereUniqueWithoutUserInput | FinTransactionsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: FinTransactionsUpdateManyWithWhereWithoutUserInput | FinTransactionsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: FinTransactionsScalarWhereInput | FinTransactionsScalarWhereInput[]
  }

  export type ConfigUserUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<ConfigUserCreateWithoutUserInput, ConfigUserUncheckedCreateWithoutUserInput> | ConfigUserCreateWithoutUserInput[] | ConfigUserUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ConfigUserCreateOrConnectWithoutUserInput | ConfigUserCreateOrConnectWithoutUserInput[]
    upsert?: ConfigUserUpsertWithWhereUniqueWithoutUserInput | ConfigUserUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ConfigUserCreateManyUserInputEnvelope
    set?: ConfigUserWhereUniqueInput | ConfigUserWhereUniqueInput[]
    disconnect?: ConfigUserWhereUniqueInput | ConfigUserWhereUniqueInput[]
    delete?: ConfigUserWhereUniqueInput | ConfigUserWhereUniqueInput[]
    connect?: ConfigUserWhereUniqueInput | ConfigUserWhereUniqueInput[]
    update?: ConfigUserUpdateWithWhereUniqueWithoutUserInput | ConfigUserUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ConfigUserUpdateManyWithWhereWithoutUserInput | ConfigUserUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ConfigUserScalarWhereInput | ConfigUserScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedEnumFrequenciaRelatoriosFilter<$PrismaModel = never> = {
    equals?: $Enums.FrequenciaRelatorios | EnumFrequenciaRelatoriosFieldRefInput<$PrismaModel>
    in?: $Enums.FrequenciaRelatorios[]
    notIn?: $Enums.FrequenciaRelatorios[]
    not?: NestedEnumFrequenciaRelatoriosFilter<$PrismaModel> | $Enums.FrequenciaRelatorios
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedEnumTemaAppFilter<$PrismaModel = never> = {
    equals?: $Enums.TemaApp | EnumTemaAppFieldRefInput<$PrismaModel>
    in?: $Enums.TemaApp[]
    notIn?: $Enums.TemaApp[]
    not?: NestedEnumTemaAppFilter<$PrismaModel> | $Enums.TemaApp
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedEnumFrequenciaRelatoriosWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.FrequenciaRelatorios | EnumFrequenciaRelatoriosFieldRefInput<$PrismaModel>
    in?: $Enums.FrequenciaRelatorios[]
    notIn?: $Enums.FrequenciaRelatorios[]
    not?: NestedEnumFrequenciaRelatoriosWithAggregatesFilter<$PrismaModel> | $Enums.FrequenciaRelatorios
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumFrequenciaRelatoriosFilter<$PrismaModel>
    _max?: NestedEnumFrequenciaRelatoriosFilter<$PrismaModel>
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedEnumTemaAppWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TemaApp | EnumTemaAppFieldRefInput<$PrismaModel>
    in?: $Enums.TemaApp[]
    notIn?: $Enums.TemaApp[]
    not?: NestedEnumTemaAppWithAggregatesFilter<$PrismaModel> | $Enums.TemaApp
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTemaAppFilter<$PrismaModel>
    _max?: NestedEnumTemaAppFilter<$PrismaModel>
  }

  export type UserCreateWithoutFinProfilesInput = {
    name: string
    cpf: string
    senha: string
    telefone: string
    data_nasc: Date | string
    status: number
    created_at?: Date | string
    finTransactions?: FinTransactionsCreateNestedManyWithoutUserInput
    configUsers?: ConfigUserCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutFinProfilesInput = {
    id?: number
    name: string
    cpf: string
    senha: string
    telefone: string
    data_nasc: Date | string
    status: number
    created_at?: Date | string
    finTransactions?: FinTransactionsUncheckedCreateNestedManyWithoutUserInput
    configUsers?: ConfigUserUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutFinProfilesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFinProfilesInput, UserUncheckedCreateWithoutFinProfilesInput>
  }

  export type UserUpsertWithoutFinProfilesInput = {
    update: XOR<UserUpdateWithoutFinProfilesInput, UserUncheckedUpdateWithoutFinProfilesInput>
    create: XOR<UserCreateWithoutFinProfilesInput, UserUncheckedCreateWithoutFinProfilesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFinProfilesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFinProfilesInput, UserUncheckedUpdateWithoutFinProfilesInput>
  }

  export type UserUpdateWithoutFinProfilesInput = {
    name?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    data_nasc?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    finTransactions?: FinTransactionsUpdateManyWithoutUserNestedInput
    configUsers?: ConfigUserUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutFinProfilesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    data_nasc?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    finTransactions?: FinTransactionsUncheckedUpdateManyWithoutUserNestedInput
    configUsers?: ConfigUserUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutFinTransactionsInput = {
    name: string
    cpf: string
    senha: string
    telefone: string
    data_nasc: Date | string
    status: number
    created_at?: Date | string
    finProfiles?: FinProfileCreateNestedManyWithoutUserInput
    configUsers?: ConfigUserCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutFinTransactionsInput = {
    id?: number
    name: string
    cpf: string
    senha: string
    telefone: string
    data_nasc: Date | string
    status: number
    created_at?: Date | string
    finProfiles?: FinProfileUncheckedCreateNestedManyWithoutUserInput
    configUsers?: ConfigUserUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutFinTransactionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFinTransactionsInput, UserUncheckedCreateWithoutFinTransactionsInput>
  }

  export type UserUpsertWithoutFinTransactionsInput = {
    update: XOR<UserUpdateWithoutFinTransactionsInput, UserUncheckedUpdateWithoutFinTransactionsInput>
    create: XOR<UserCreateWithoutFinTransactionsInput, UserUncheckedCreateWithoutFinTransactionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFinTransactionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFinTransactionsInput, UserUncheckedUpdateWithoutFinTransactionsInput>
  }

  export type UserUpdateWithoutFinTransactionsInput = {
    name?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    data_nasc?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    finProfiles?: FinProfileUpdateManyWithoutUserNestedInput
    configUsers?: ConfigUserUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutFinTransactionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    data_nasc?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    finProfiles?: FinProfileUncheckedUpdateManyWithoutUserNestedInput
    configUsers?: ConfigUserUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutConfigUsersInput = {
    name: string
    cpf: string
    senha: string
    telefone: string
    data_nasc: Date | string
    status: number
    created_at?: Date | string
    finProfiles?: FinProfileCreateNestedManyWithoutUserInput
    finTransactions?: FinTransactionsCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutConfigUsersInput = {
    id?: number
    name: string
    cpf: string
    senha: string
    telefone: string
    data_nasc: Date | string
    status: number
    created_at?: Date | string
    finProfiles?: FinProfileUncheckedCreateNestedManyWithoutUserInput
    finTransactions?: FinTransactionsUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutConfigUsersInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutConfigUsersInput, UserUncheckedCreateWithoutConfigUsersInput>
  }

  export type UserUpsertWithoutConfigUsersInput = {
    update: XOR<UserUpdateWithoutConfigUsersInput, UserUncheckedUpdateWithoutConfigUsersInput>
    create: XOR<UserCreateWithoutConfigUsersInput, UserUncheckedCreateWithoutConfigUsersInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutConfigUsersInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutConfigUsersInput, UserUncheckedUpdateWithoutConfigUsersInput>
  }

  export type UserUpdateWithoutConfigUsersInput = {
    name?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    data_nasc?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    finProfiles?: FinProfileUpdateManyWithoutUserNestedInput
    finTransactions?: FinTransactionsUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutConfigUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    data_nasc?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    finProfiles?: FinProfileUncheckedUpdateManyWithoutUserNestedInput
    finTransactions?: FinTransactionsUncheckedUpdateManyWithoutUserNestedInput
  }

  export type FinProfileCreateWithoutUserInput = {
    renda_mensal?: Decimal | DecimalJsLike | number | string | null
    despesas_fixas?: Decimal | DecimalJsLike | number | string | null
    despesas_variaveis?: Decimal | DecimalJsLike | number | string | null
    objetivo_financeiro?: string | null
    perfil_risco?: string | null
    patrimonio_atual?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type FinProfileUncheckedCreateWithoutUserInput = {
    id?: number
    renda_mensal?: Decimal | DecimalJsLike | number | string | null
    despesas_fixas?: Decimal | DecimalJsLike | number | string | null
    despesas_variaveis?: Decimal | DecimalJsLike | number | string | null
    objetivo_financeiro?: string | null
    perfil_risco?: string | null
    patrimonio_atual?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type FinProfileCreateOrConnectWithoutUserInput = {
    where: FinProfileWhereUniqueInput
    create: XOR<FinProfileCreateWithoutUserInput, FinProfileUncheckedCreateWithoutUserInput>
  }

  export type FinProfileCreateManyUserInputEnvelope = {
    data: FinProfileCreateManyUserInput | FinProfileCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type FinTransactionsCreateWithoutUserInput = {
    data_transacao: Date | string
    categoria_transacao?: string | null
    descricao?: string | null
    valor: Decimal | DecimalJsLike | number | string
    forma_pagamento?: string | null
  }

  export type FinTransactionsUncheckedCreateWithoutUserInput = {
    id?: number
    data_transacao: Date | string
    categoria_transacao?: string | null
    descricao?: string | null
    valor: Decimal | DecimalJsLike | number | string
    forma_pagamento?: string | null
  }

  export type FinTransactionsCreateOrConnectWithoutUserInput = {
    where: FinTransactionsWhereUniqueInput
    create: XOR<FinTransactionsCreateWithoutUserInput, FinTransactionsUncheckedCreateWithoutUserInput>
  }

  export type FinTransactionsCreateManyUserInputEnvelope = {
    data: FinTransactionsCreateManyUserInput | FinTransactionsCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type ConfigUserCreateWithoutUserInput = {
    notificacoes_ativas?: boolean
    frequencia_relatorios?: $Enums.FrequenciaRelatorios
    moeda_preferencial?: string
    idioma?: string
    tema_app?: $Enums.TemaApp
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type ConfigUserUncheckedCreateWithoutUserInput = {
    id?: number
    notificacoes_ativas?: boolean
    frequencia_relatorios?: $Enums.FrequenciaRelatorios
    moeda_preferencial?: string
    idioma?: string
    tema_app?: $Enums.TemaApp
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type ConfigUserCreateOrConnectWithoutUserInput = {
    where: ConfigUserWhereUniqueInput
    create: XOR<ConfigUserCreateWithoutUserInput, ConfigUserUncheckedCreateWithoutUserInput>
  }

  export type ConfigUserCreateManyUserInputEnvelope = {
    data: ConfigUserCreateManyUserInput | ConfigUserCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type FinProfileUpsertWithWhereUniqueWithoutUserInput = {
    where: FinProfileWhereUniqueInput
    update: XOR<FinProfileUpdateWithoutUserInput, FinProfileUncheckedUpdateWithoutUserInput>
    create: XOR<FinProfileCreateWithoutUserInput, FinProfileUncheckedCreateWithoutUserInput>
  }

  export type FinProfileUpdateWithWhereUniqueWithoutUserInput = {
    where: FinProfileWhereUniqueInput
    data: XOR<FinProfileUpdateWithoutUserInput, FinProfileUncheckedUpdateWithoutUserInput>
  }

  export type FinProfileUpdateManyWithWhereWithoutUserInput = {
    where: FinProfileScalarWhereInput
    data: XOR<FinProfileUpdateManyMutationInput, FinProfileUncheckedUpdateManyWithoutUserInput>
  }

  export type FinProfileScalarWhereInput = {
    AND?: FinProfileScalarWhereInput | FinProfileScalarWhereInput[]
    OR?: FinProfileScalarWhereInput[]
    NOT?: FinProfileScalarWhereInput | FinProfileScalarWhereInput[]
    id?: IntFilter<"FinProfile"> | number
    user_id?: IntFilter<"FinProfile"> | number
    renda_mensal?: DecimalNullableFilter<"FinProfile"> | Decimal | DecimalJsLike | number | string | null
    despesas_fixas?: DecimalNullableFilter<"FinProfile"> | Decimal | DecimalJsLike | number | string | null
    despesas_variaveis?: DecimalNullableFilter<"FinProfile"> | Decimal | DecimalJsLike | number | string | null
    objetivo_financeiro?: StringNullableFilter<"FinProfile"> | string | null
    perfil_risco?: StringNullableFilter<"FinProfile"> | string | null
    patrimonio_atual?: DecimalNullableFilter<"FinProfile"> | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeFilter<"FinProfile"> | Date | string
    updated_at?: DateTimeFilter<"FinProfile"> | Date | string
  }

  export type FinTransactionsUpsertWithWhereUniqueWithoutUserInput = {
    where: FinTransactionsWhereUniqueInput
    update: XOR<FinTransactionsUpdateWithoutUserInput, FinTransactionsUncheckedUpdateWithoutUserInput>
    create: XOR<FinTransactionsCreateWithoutUserInput, FinTransactionsUncheckedCreateWithoutUserInput>
  }

  export type FinTransactionsUpdateWithWhereUniqueWithoutUserInput = {
    where: FinTransactionsWhereUniqueInput
    data: XOR<FinTransactionsUpdateWithoutUserInput, FinTransactionsUncheckedUpdateWithoutUserInput>
  }

  export type FinTransactionsUpdateManyWithWhereWithoutUserInput = {
    where: FinTransactionsScalarWhereInput
    data: XOR<FinTransactionsUpdateManyMutationInput, FinTransactionsUncheckedUpdateManyWithoutUserInput>
  }

  export type FinTransactionsScalarWhereInput = {
    AND?: FinTransactionsScalarWhereInput | FinTransactionsScalarWhereInput[]
    OR?: FinTransactionsScalarWhereInput[]
    NOT?: FinTransactionsScalarWhereInput | FinTransactionsScalarWhereInput[]
    id?: IntFilter<"FinTransactions"> | number
    user_id?: IntFilter<"FinTransactions"> | number
    data_transacao?: DateTimeFilter<"FinTransactions"> | Date | string
    categoria_transacao?: StringNullableFilter<"FinTransactions"> | string | null
    descricao?: StringNullableFilter<"FinTransactions"> | string | null
    valor?: DecimalFilter<"FinTransactions"> | Decimal | DecimalJsLike | number | string
    forma_pagamento?: StringNullableFilter<"FinTransactions"> | string | null
  }

  export type ConfigUserUpsertWithWhereUniqueWithoutUserInput = {
    where: ConfigUserWhereUniqueInput
    update: XOR<ConfigUserUpdateWithoutUserInput, ConfigUserUncheckedUpdateWithoutUserInput>
    create: XOR<ConfigUserCreateWithoutUserInput, ConfigUserUncheckedCreateWithoutUserInput>
  }

  export type ConfigUserUpdateWithWhereUniqueWithoutUserInput = {
    where: ConfigUserWhereUniqueInput
    data: XOR<ConfigUserUpdateWithoutUserInput, ConfigUserUncheckedUpdateWithoutUserInput>
  }

  export type ConfigUserUpdateManyWithWhereWithoutUserInput = {
    where: ConfigUserScalarWhereInput
    data: XOR<ConfigUserUpdateManyMutationInput, ConfigUserUncheckedUpdateManyWithoutUserInput>
  }

  export type ConfigUserScalarWhereInput = {
    AND?: ConfigUserScalarWhereInput | ConfigUserScalarWhereInput[]
    OR?: ConfigUserScalarWhereInput[]
    NOT?: ConfigUserScalarWhereInput | ConfigUserScalarWhereInput[]
    id?: IntFilter<"ConfigUser"> | number
    user_id?: IntFilter<"ConfigUser"> | number
    notificacoes_ativas?: BoolFilter<"ConfigUser"> | boolean
    frequencia_relatorios?: EnumFrequenciaRelatoriosFilter<"ConfigUser"> | $Enums.FrequenciaRelatorios
    moeda_preferencial?: StringFilter<"ConfigUser"> | string
    idioma?: StringFilter<"ConfigUser"> | string
    tema_app?: EnumTemaAppFilter<"ConfigUser"> | $Enums.TemaApp
    created_at?: DateTimeFilter<"ConfigUser"> | Date | string
    updated_at?: DateTimeFilter<"ConfigUser"> | Date | string
  }

  export type FinProfileCreateManyUserInput = {
    id?: number
    renda_mensal?: Decimal | DecimalJsLike | number | string | null
    despesas_fixas?: Decimal | DecimalJsLike | number | string | null
    despesas_variaveis?: Decimal | DecimalJsLike | number | string | null
    objetivo_financeiro?: string | null
    perfil_risco?: string | null
    patrimonio_atual?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type FinTransactionsCreateManyUserInput = {
    id?: number
    data_transacao: Date | string
    categoria_transacao?: string | null
    descricao?: string | null
    valor: Decimal | DecimalJsLike | number | string
    forma_pagamento?: string | null
  }

  export type ConfigUserCreateManyUserInput = {
    id?: number
    notificacoes_ativas?: boolean
    frequencia_relatorios?: $Enums.FrequenciaRelatorios
    moeda_preferencial?: string
    idioma?: string
    tema_app?: $Enums.TemaApp
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type FinProfileUpdateWithoutUserInput = {
    renda_mensal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    despesas_fixas?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    despesas_variaveis?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    objetivo_financeiro?: NullableStringFieldUpdateOperationsInput | string | null
    perfil_risco?: NullableStringFieldUpdateOperationsInput | string | null
    patrimonio_atual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FinProfileUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    renda_mensal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    despesas_fixas?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    despesas_variaveis?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    objetivo_financeiro?: NullableStringFieldUpdateOperationsInput | string | null
    perfil_risco?: NullableStringFieldUpdateOperationsInput | string | null
    patrimonio_atual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FinProfileUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    renda_mensal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    despesas_fixas?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    despesas_variaveis?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    objetivo_financeiro?: NullableStringFieldUpdateOperationsInput | string | null
    perfil_risco?: NullableStringFieldUpdateOperationsInput | string | null
    patrimonio_atual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FinTransactionsUpdateWithoutUserInput = {
    data_transacao?: DateTimeFieldUpdateOperationsInput | Date | string
    categoria_transacao?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    forma_pagamento?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FinTransactionsUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    data_transacao?: DateTimeFieldUpdateOperationsInput | Date | string
    categoria_transacao?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    forma_pagamento?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FinTransactionsUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    data_transacao?: DateTimeFieldUpdateOperationsInput | Date | string
    categoria_transacao?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    forma_pagamento?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ConfigUserUpdateWithoutUserInput = {
    notificacoes_ativas?: BoolFieldUpdateOperationsInput | boolean
    frequencia_relatorios?: EnumFrequenciaRelatoriosFieldUpdateOperationsInput | $Enums.FrequenciaRelatorios
    moeda_preferencial?: StringFieldUpdateOperationsInput | string
    idioma?: StringFieldUpdateOperationsInput | string
    tema_app?: EnumTemaAppFieldUpdateOperationsInput | $Enums.TemaApp
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConfigUserUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    notificacoes_ativas?: BoolFieldUpdateOperationsInput | boolean
    frequencia_relatorios?: EnumFrequenciaRelatoriosFieldUpdateOperationsInput | $Enums.FrequenciaRelatorios
    moeda_preferencial?: StringFieldUpdateOperationsInput | string
    idioma?: StringFieldUpdateOperationsInput | string
    tema_app?: EnumTemaAppFieldUpdateOperationsInput | $Enums.TemaApp
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConfigUserUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    notificacoes_ativas?: BoolFieldUpdateOperationsInput | boolean
    frequencia_relatorios?: EnumFrequenciaRelatoriosFieldUpdateOperationsInput | $Enums.FrequenciaRelatorios
    moeda_preferencial?: StringFieldUpdateOperationsInput | string
    idioma?: StringFieldUpdateOperationsInput | string
    tema_app?: EnumTemaAppFieldUpdateOperationsInput | $Enums.TemaApp
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}