// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model FinProfile {
  id                  Int      @id @default(autoincrement())
  user_id             Int      @unique
  renda_mensal        Decimal? @db.Decimal(15, 2)
  despesas_fixas      Decimal? @db.Decimal(15, 2)
  despesas_variaveis  Decimal? @db.Decimal(15, 2)
  objetivo_financeiro String?  @db.VarChar(50)
  perfil_risco        String?  @db.VarChar(40)
  patrimonio_atual    Decimal? @db.Decimal(20, 2)
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt
  user                User     @relation(fields: [user_id], references: [id])

  @@map("fin_profile")
}

model FinTransactions {
  id                  Int      @id @default(autoincrement())
  user_id             Int
  data_transacao      DateTime
  categoria_transacao String?  @db.VarChar(50)
  descricao           String?  @db.VarChar(255)
  valor               Decimal  @db.Decimal(15, 2)
  forma_pagamento     String?  @db.VarChar(40)
  user                User     @relation(fields: [user_id], references: [id])

  @@map("fin_transactions")
}

model ConfigUser {
  id                    Int                  @id @default(autoincrement())
  user_id               Int                  @unique
  notificacoes_ativas   Boolean              @default(true)
  frequencia_relatorios FrequenciaRelatorios @default(SEMANAL)
  moeda_preferencial    String               @default("BRL")
  idioma                String               @default("PortuguÃªs")
  tema_app              TemaApp              @default(CLARO)
  user                  User                 @relation(fields: [user_id], references: [id])
  created_at            DateTime             @default(now())
  updated_at            DateTime             @updatedAt

  @@map("config_user")
}

model User {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  cpf             String            @db.VarChar(255)
  senha           String            @db.VarChar(255)
  telefone        String            @db.VarChar(255)
  data_nasc       DateTime
  status          Int               @db.TinyInt
  created_at      DateTime          @default(now())
  finProfiles     FinProfile[]
  finTransactions FinTransactions[]
  configUsers     ConfigUser[]
}

enum FrequenciaRelatorios {
  DIARIA
  SEMANAL
  MENSAL
}

enum TemaApp {
  CLARO
  ESCURO
}
